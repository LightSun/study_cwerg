// NOTE: this file is PARTIALLY autogenerated via: ./isel_tab.py gen_c
// (c) Robert Muth - see LICENSE for more info

#include "CodeGenA32/isel_gen.h"
#include "Base/opcode_gen.h"

#include <cstdint>

namespace cwerg::code_gen_a32 {
namespace {
using namespace cwerg;
using namespace cwerg::base;

// +-prefix converts an enum the underlying integer type
template <typename T>
constexpr auto operator+(T e) noexcept
    -> std::enable_if_t<std::is_enum<T>::value, std::underlying_type_t<T>> {
  return static_cast<std::underlying_type_t<T>>(e);
}

using IC = IMM_CURB;
using a32::PRED;
using a32::REG;
using a32::SHIFT;

bool ImmFitsCurb(IMM_CURB constr,
                 int64_t x,
                 int32_t last_stack_offset,
                 bool assume_stk_op_matches) {
  switch (constr) {
    default:
    case IC::invalid:
      ASSERT(false, "unexpected IMM_CURB " << (unsigned)constr);
      return false;
    case IC::pos_stk_combo_8_bits_shifted:
      x += last_stack_offset;
      // fallthrough
    case IC::pos_8_bits_shifted:
      return a32::EncodeRotatedImm(x) != a32::kEncodeFailure;
    case IC::neg_8_bits_shifted:
      return a32::EncodeRotatedImm(-x) != a32::kEncodeFailure;
    case IC::not_8_bits_shifted:
      return a32::EncodeRotatedImm(~x) != a32::kEncodeFailure;
    case IC::pos_5_bits:
      return 0 <= x && x < (1U << 5U);
    case IC::pos_stk_combo_12_bits:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fallthrough
    case IC::pos_12_bits:
      return 0 <= x && x < (1U << 12U);
    case IC::neg_12_bits:
      return 0 <= -x && -x < (1U << 12U);
    case IC::pos_stk_combo_8_bits:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fallthrough
    case IC::pos_8_bits:
      return 0 <= x && x < (1U << 8U);
    case IC::pos_stk_combo_8_bits_times_4:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fallthrough
    case IC::pos_8_bits_times_4:
      return (x & 3U) == 0 && 0 <= (x / 2) && (x / 2) < (1U << 8);
    case IC::neg_8_bits_times_4:
      return (x & 3U) == 0 && -(1U << 8U) < (x / 2) && (x / 2) <= 0;
    case IC::neg_8_bits:
      return 0 <= -x && -x < (1U << 8U);
    case IC::pos_stk_combo_16_bits:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fallthrough
    case IC::pos_16_bits:
      return 0 <= x && x < (1U << 16U);
    case IC::zero:
      return 0 == x;
    case IC::any_32_bits:
      return true;
  }
}

uint64_t ExtractTypeMaskForPattern(Ins ins) {
  uint64_t reg_matcher = 0;
  unsigned num_ops = InsOpcode(ins).num_operands;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Handle h = InsOperand(ins, i);
    if (h.kind() == RefKind::REG) {
      reg_matcher |= uint64_t(RegKind(Reg(h))) << 8 * i;
    } else if (h.kind() == RefKind::CONST) {
      reg_matcher |= uint64_t(ConstKind(Const(h))) << 8 * i;
    }
  }
  return reg_matcher;
}

bool PatternMatchesTypeConstraints(const Pattern& pat, uint64_t type_mask) {
  return type_mask == pat.type_curbs_as_int;
}

uint8_t PatternMismatchesImmConstraints(const Pattern& pat,
                                        Ins ins,
                                        bool assume_stk_op_matches) {
  unsigned num_ops = InsOpcode(ins).num_operands;
  uint8_t out = 0;
  int32_t last_stack_offset = 0;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Const op(InsOperand(ins, i));
    const IC imm_curb = pat.imm_curbs[i];
    if (op.kind() == RefKind::STK) {
      if (assume_stk_op_matches) {
        last_stack_offset = 0;
      } else {
        last_stack_offset = StkSlot(Stk(op));
      }
    } else if (op.kind() == RefKind::REG) {
      if (imm_curb != IC::invalid)
        return MATCH_IMPOSSIBLE;  // we have a reg but need an imm
    } else if (op.kind() == RefKind::CONST) {
      if (imm_curb == IC::invalid) {
        // we have an imm but need a reg - this can be accommodated.
        out |= 1U << i;
      } else if (!ImmFitsCurb(imm_curb, ConstValueInt64(op), last_stack_offset,
                              assume_stk_op_matches)) {
        // imm does not not fit
        return MATCH_IMPOSSIBLE;
      }
    }
  }
  return out;
}

/* @AUTOGEN-START@ */

const InsTmpl kInsTemplates[] = {
  { /*used first entry*/ },
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xe },  // add [2]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::add_imm, 0xe },  // add [3]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xe },  // add [4]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::add_imm, 0xe },  // add [5]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vadd_f32, 0xe },  // add [6]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vadd_f64, 0xe },  // add [7]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::sub_regimm, 0xe },  // sub [8]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::sub_imm, 0xe },  // sub [9]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg2, +PARAM::num1},
    a32::OPC::rsb_imm, 0xe },  // sub [10]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::sub_regimm, 0xe },  // sub [11]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::sub_imm, 0xe },  // sub [12]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg2, +PARAM::num1},
    a32::OPC::rsb_imm, 0xe },  // sub [13]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vsub_f32, 0xe },  // sub [14]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vsub_f64, 0xe },  // sub [15]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::mul, 0xe },  // mul [16]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::mul, 0xe },  // mul [17]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vmul_f32, 0xe },  // mul [18]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vmul_f64, 0xe },  // mul [19]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::udiv, 0xe },  // div [20]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::sdiv, 0xe },  // div [21]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vdiv_f32, 0xe },  // div [22]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::vdiv_f64, 0xe },  // div [23]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // xor [24]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::eor_imm, 0xe },  // xor [25]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // xor [26]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::eor_imm, 0xe },  // xor [27]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::and_regimm, 0xe },  // and [28]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::and_imm, 0xe },  // and [29]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_not},
    a32::OPC::bic_imm, 0xe },  // and [30]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::and_regimm, 0xe },  // and [31]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::and_imm, 0xe },  // and [32]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_not},
    a32::OPC::bic_imm, 0xe },  // and [33]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::orr_regimm, 0xe },  // or [34]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::orr_imm, 0xe },  // or [35]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::orr_regimm, 0xe },  // or [36]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::orr_imm, 0xe },  // or [37]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, +PARAM::reg2},
    a32::OPC::mov_regreg, 0x16 },  // shl [38]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, +PARAM::num2},
    a32::OPC::mov_regimm, 0x16 },  // shl [39]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, +PARAM::reg2},
    a32::OPC::mov_regreg, 0x16 },  // shl [40]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, +PARAM::num2},
    a32::OPC::mov_regimm, 0x16 },  // shl [41]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsr, +PARAM::reg2},
    a32::OPC::mov_regreg, 0x16 },  // shr [42]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsr, +PARAM::num2},
    a32::OPC::mov_regimm, 0x16 },  // shr [43]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::asr, +PARAM::reg2},
    a32::OPC::mov_regreg, 0x16 },  // shr [44]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::asr, +PARAM::num2},
    a32::OPC::mov_regimm, 0x16 },  // shr [45]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // beq [46]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [47]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // beq [48]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [49]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // beq [50]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [51]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // beq [52]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [53]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // beq [54]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [55]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // beq [56]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [57]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // beq [58]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [59]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // beq [60]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [61]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f32, 0x6 },  // beq [62]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // beq [63]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [64]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f64, 0x6 },  // beq [65]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // beq [66]
  { {+PRED::eq, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // beq [67]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // bne [68]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [69]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // bne [70]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [71]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // bne [72]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [73]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // bne [74]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [75]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // bne [76]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [77]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // bne [78]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [79]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // bne [80]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [81]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // bne [82]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [83]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f32, 0x6 },  // bne [84]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // bne [85]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [86]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f64, 0x6 },  // bne [87]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // bne [88]
  { {+PRED::ne, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // bne [89]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // blt [90]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [91]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // blt [92]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [93]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // blt [94]
  { {+PRED::hi, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [95]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // blt [96]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [97]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // blt [98]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [99]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // blt [100]
  { {+PRED::hi, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [101]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // blt [102]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [103]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // blt [104]
  { {+PRED::cc, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [105]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // blt [106]
  { {+PRED::hi, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [107]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // blt [108]
  { {+PRED::lt, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [109]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // blt [110]
  { {+PRED::lt, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [111]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // blt [112]
  { {+PRED::gt, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [113]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f32, 0x6 },  // blt [114]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // blt [115]
  { {+PRED::mi, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [116]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f64, 0x6 },  // blt [117]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // blt [118]
  { {+PRED::mi, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // blt [119]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // ble [120]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [121]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // ble [122]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [123]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // ble [124]
  { {+PRED::cs, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [125]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // ble [126]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [127]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // ble [128]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [129]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // ble [130]
  { {+PRED::cs, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [131]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // ble [132]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [133]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // ble [134]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [135]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // ble [136]
  { {+PRED::cs, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [137]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // ble [138]
  { {+PRED::le, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [139]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::cmp_imm, 0x6 },  // ble [140]
  { {+PRED::le, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [141]
  { {+PRED::al, +PARAM::reg1, +PARAM::num0},
    a32::OPC::cmp_imm, 0x6 },  // ble [142]
  { {+PRED::ge, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [143]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f32, 0x6 },  // ble [144]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // ble [145]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [146]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vcmp_f64, 0x6 },  // ble [147]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // ble [148]
  { {+PRED::ls, +PARAM::bbl2},
    a32::OPC::b, 0x2 },  // ble [149]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::jtb1_lo16},
    a32::OPC::movw, 0x6 },  // switch [150]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::jtb1_hi16},
    a32::OPC::movt, 0x6 },  // switch [151]
  { {+PRED::al, +REG::pc, +PARAM::scratch_gpr, +PARAM::reg0, +SHIFT::lsl, 2},
    a32::OPC::ldr_reg_add, 0xc },  // switch [152]
  { {+PRED::al, +PARAM::bbl0},
    a32::OPC::b, 0x2 },  // bra [153]
  { {+PRED::al, +PARAM::fun0},
    a32::OPC::bl, 0x2 },  // bsr [154]
  { {+PRED::al, +PARAM::reg0},
    a32::OPC::blx_reg, 0x2 },  // jsr [155]
  { {+PRED::al, +REG::sp, 4, +REG::r7},
    a32::OPC::str_imm_sub_pre, 0x0 },  // syscall [156]
  { {+PRED::al, +REG::sp, 4, +REG::r7},
    a32::OPC::str_imm_sub_pre, 0x0 },  // syscall [157]
  { {+PRED::al, +REG::r7, +PARAM::num1},
    a32::OPC::movw, 0x4 },  // syscall [158]
  { {+PRED::al, 0},
    a32::OPC::svc, 0x0 },  // syscall [159]
  { {+PRED::al, +REG::r7, +REG::sp, 4},
    a32::OPC::ldr_imm_add_post, 0x0 },  // syscall [160]
  { {+PRED::al, +REG::r7, +REG::sp, 4},
    a32::OPC::ldr_imm_add_post, 0x0 },  // syscall [161]
  { {+PRED::al},
    a32::OPC::ud2, 0x0 },  // trap [162]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [163]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [164]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [165]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [166]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [167]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [168]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [169]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [170]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [171]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [172]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [173]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [174]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [175]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [176]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [177]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [178]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [179]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [180]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [181]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [182]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [183]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [184]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [185]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // conv [186]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::uxtb, 0x6 },  // conv [187]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::uxth, 0x6 },  // conv [188]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::sxtb, 0x6 },  // conv [189]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::sxth, 0x6 },  // conv [190]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::uxtb, 0x6 },  // conv [191]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::uxth, 0x6 },  // conv [192]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::sxtb, 0x6 },  // conv [193]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, 0},
    a32::OPC::sxth, 0x6 },  // conv [194]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vcvt_s32_f32, 0x6 },  // conv [195]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vmov_stoa, 0x6 },  // conv [196]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vcvt_u32_f32, 0x6 },  // conv [197]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vmov_stoa, 0x6 },  // conv [198]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vcvt_s32_f64, 0x6 },  // conv [199]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vmov_stoa, 0x6 },  // conv [200]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vcvt_u32_f64, 0x6 },  // conv [201]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vmov_stoa, 0x6 },  // conv [202]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vmov_atos, 0x6 },  // conv [203]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg0},
    a32::OPC::vcvt_f32_s32, 0x6 },  // conv [204]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vmov_atos, 0x6 },  // conv [205]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg0},
    a32::OPC::vcvt_f32_u32, 0x6 },  // conv [206]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vmov_atos, 0x6 },  // conv [207]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vcvt_f64_s32, 0x6 },  // conv [208]
  { {+PRED::al, +PARAM::scratch_flt, +PARAM::reg1},
    a32::OPC::vmov_atos, 0x6 },  // conv [209]
  { {+PRED::al, +PARAM::reg0, +PARAM::scratch_flt},
    a32::OPC::vcvt_f64_u32, 0x6 },  // conv [210]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [211]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [212]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [213]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [214]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [215]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [216]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [217]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [218]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [219]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [220]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [221]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [222]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [223]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [224]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [225]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // bitcast [226]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [227]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [228]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [229]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [230]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [231]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [232]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [233]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [234]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [235]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [236]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [237]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [238]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [239]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [240]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [241]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [242]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [243]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [244]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [245]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [246]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [247]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [248]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [249]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [250]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [251]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [252]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [253]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [254]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [255]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [256]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [257]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [258]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [259]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [260]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [261]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [262]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [263]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [264]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [265]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [266]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [267]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [268]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::mov_imm, 0x6 },  // mov [269]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_not},
    a32::OPC::mvn_imm, 0x6 },  // mov [270]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // mov [271]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // mov [272]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_lo16},
    a32::OPC::movw, 0x6 },  // mov [273]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_hi16},
    a32::OPC::movt, 0x6 },  // mov [274]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vmov_f32, 0x6 },  // mov [275]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::vmov_f64, 0x6 },  // mov [276]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [277]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [278]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [279]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [280]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [281]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [282]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [283]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [284]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [285]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [286]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [287]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [288]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [289]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [290]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [291]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [292]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [293]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [294]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [295]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [296]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [297]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [298]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [299]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [300]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [301]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [302]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [303]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [304]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [305]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [306]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [307]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [308]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [309]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [310]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [311]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [312]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [313]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [314]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [315]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [316]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [317]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [318]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [319]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [320]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [321]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [322]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [323]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [324]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [325]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [326]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [327]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [328]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [329]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [330]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [331]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [332]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [333]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [334]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [335]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [336]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [337]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [338]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [339]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [340]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [341]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [342]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [343]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [344]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [345]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [346]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [347]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [348]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [349]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [350]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [351]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [352]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [353]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [354]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [355]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [356]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [357]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [358]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [359]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [360]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [361]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [362]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [363]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [364]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [365]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [366]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [367]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [368]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [369]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [370]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [371]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [372]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [373]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [374]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [375]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [376]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [377]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [378]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [379]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [380]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [381]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [382]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [383]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [384]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [385]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [386]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [387]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [388]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [389]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [390]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [391]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [392]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [393]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [394]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [395]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [396]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [397]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [398]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [399]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [400]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [401]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [402]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [403]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [404]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [405]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [406]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [407]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [408]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [409]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [410]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [411]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [412]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [413]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [414]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [415]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [416]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [417]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [418]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [419]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [420]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [421]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [422]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [423]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [424]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [425]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [426]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [427]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [428]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [429]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [430]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [431]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [432]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [433]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [434]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [435]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [436]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [437]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [438]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [439]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [440]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [441]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [442]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [443]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [444]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [445]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [446]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [447]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [448]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [449]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [450]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [451]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [452]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [453]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [454]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [455]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [456]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [457]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [458]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [459]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [460]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [461]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [462]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [463]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [464]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [465]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [466]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [467]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [468]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [469]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [470]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [471]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [472]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [473]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [474]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [475]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [476]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [477]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [478]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [479]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [480]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [481]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [482]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [483]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [484]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [485]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [486]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [487]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [488]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [489]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [490]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [491]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [492]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [493]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [494]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [495]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [496]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [497]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [498]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [499]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [500]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [501]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [502]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [503]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [504]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [505]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [506]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [507]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [508]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [509]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [510]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [511]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [512]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [513]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [514]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [515]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [516]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [517]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [518]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [519]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [520]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [521]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [522]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [523]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [524]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [525]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [526]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [527]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [528]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [529]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [530]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [531]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [532]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [533]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [534]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [535]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [536]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [537]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [538]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [539]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [540]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [541]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [542]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [543]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [544]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [545]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [546]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [547]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [548]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [549]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [550]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [551]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [552]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [553]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [554]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [555]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [556]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [557]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [558]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [559]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [560]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [561]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [562]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [563]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [564]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [565]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [566]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [567]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [568]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [569]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [570]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [571]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [572]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [573]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [574]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [575]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [576]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [577]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [578]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [579]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [580]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [581]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [582]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [583]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [584]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [585]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [586]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [587]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [588]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [589]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [590]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [591]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [592]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [593]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [594]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [595]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [596]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [597]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [598]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [599]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [600]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [601]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [602]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [603]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [604]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [605]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [606]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [607]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [608]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [609]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [610]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [611]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [612]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [613]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [614]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [615]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [616]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [617]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [618]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [619]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [620]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [621]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [622]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [623]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [624]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [625]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [626]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [627]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [628]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [629]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [630]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [631]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [632]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [633]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [634]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [635]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [636]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [637]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [638]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [639]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [640]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [641]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [642]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [643]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [644]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [645]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [646]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [647]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [648]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [649]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [650]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [651]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [652]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [653]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [654]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmpeq [655]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [656]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [657]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmpeq [658]
  { {+PRED::eq, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmpeq [659]
  { {+PRED::ne, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmpeq [660]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmpeq [661]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [662]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [663]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [664]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmpeq [665]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [666]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [667]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [668]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmpeq [669]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [670]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [671]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [672]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmpeq [673]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [674]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [675]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [676]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmpeq [677]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [678]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [679]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [680]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmpeq [681]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [682]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [683]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [684]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmpeq [685]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [686]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [687]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [688]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmpeq [689]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmpeq [690]
  { {+PRED::eq, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [691]
  { {+PRED::ne, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmpeq [692]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [693]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [694]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [695]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [696]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [697]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [698]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [699]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [700]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [701]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [702]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [703]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [704]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [705]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [706]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [707]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [708]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [709]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [710]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [711]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [712]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [713]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [714]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [715]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [716]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [717]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [718]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [719]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [720]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [721]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [722]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [723]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [724]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [725]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [726]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [727]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [728]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [729]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [730]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [731]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [732]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [733]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [734]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [735]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [736]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [737]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [738]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [739]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [740]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [741]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [742]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [743]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [744]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [745]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [746]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [747]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [748]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [749]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [750]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [751]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [752]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [753]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [754]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [755]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [756]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [757]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [758]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [759]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [760]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [761]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [762]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [763]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [764]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [765]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [766]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [767]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [768]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [769]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [770]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [771]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [772]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [773]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [774]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [775]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [776]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [777]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [778]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [779]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [780]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [781]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [782]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [783]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [784]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [785]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [786]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [787]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [788]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [789]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [790]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [791]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [792]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [793]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [794]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [795]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [796]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [797]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [798]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [799]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [800]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [801]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [802]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [803]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [804]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [805]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [806]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [807]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [808]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [809]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [810]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [811]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [812]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [813]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [814]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [815]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [816]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [817]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [818]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [819]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [820]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [821]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [822]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [823]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [824]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [825]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [826]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [827]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [828]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [829]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [830]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [831]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [832]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [833]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [834]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [835]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [836]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [837]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [838]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [839]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [840]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [841]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [842]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [843]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [844]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [845]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [846]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [847]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [848]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [849]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [850]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [851]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [852]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [853]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [854]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [855]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [856]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [857]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [858]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [859]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [860]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [861]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [862]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [863]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [864]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [865]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [866]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [867]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [868]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [869]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [870]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [871]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [872]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [873]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [874]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [875]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [876]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [877]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [878]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [879]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [880]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [881]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [882]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [883]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [884]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [885]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [886]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [887]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [888]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [889]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [890]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [891]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [892]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [893]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [894]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [895]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [896]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [897]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [898]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [899]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [900]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [901]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [902]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [903]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [904]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [905]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [906]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [907]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [908]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [909]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [910]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [911]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [912]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [913]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [914]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [915]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [916]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [917]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [918]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [919]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [920]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [921]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [922]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [923]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [924]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [925]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [926]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [927]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [928]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [929]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [930]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [931]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [932]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [933]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [934]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [935]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [936]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [937]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [938]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [939]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [940]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [941]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [942]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [943]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [944]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [945]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [946]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [947]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [948]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [949]
  { {+PRED::ge, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [950]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [951]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [952]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [953]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [954]
  { {+PRED::lt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [955]
  { {+PRED::ge, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [956]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [957]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [958]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [959]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [960]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [961]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [962]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [963]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [964]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [965]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [966]
  { {+PRED::cc, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [967]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [968]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [969]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [970]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [971]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [972]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [973]
  { {+PRED::cs, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [974]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a32::OPC::cmp_regimm, 0x6 },  // cmplt [975]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [976]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [977]
  { {+PRED::al, +PARAM::reg3, +PARAM::num4},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [978]
  { {+PRED::cc, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [979]
  { {+PRED::cs, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [980]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [981]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [982]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [983]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [984]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [985]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [986]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [987]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [988]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [989]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [990]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [991]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [992]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [993]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [994]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [995]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [996]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [997]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [998]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [999]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1000]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1001]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1002]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1003]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1004]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1005]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1006]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1007]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1008]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1009]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1010]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1011]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1012]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1013]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1014]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1015]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1016]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1017]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1018]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1019]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1020]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1021]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1022]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1023]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1024]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1025]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1026]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1027]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1028]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1029]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1030]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1031]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1032]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1033]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1034]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1035]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1036]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1037]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1038]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1039]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1040]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1041]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1042]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1043]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1044]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1045]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1046]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1047]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1048]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1049]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1050]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1051]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1052]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1053]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1054]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1055]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1056]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1057]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1058]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1059]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1060]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1061]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1062]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1063]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1064]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1065]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1066]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1067]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1068]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1069]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1070]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1071]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1072]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1073]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1074]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1075]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1076]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1077]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1078]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1079]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1080]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1081]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1082]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1083]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1084]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1085]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1086]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1087]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1088]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1089]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1090]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1091]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1092]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1093]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1094]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1095]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1096]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1097]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1098]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1099]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1100]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1101]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1102]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1103]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1104]
  { {+PRED::gt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1105]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1106]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1107]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1108]
  { {+PRED::le, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1109]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1110]
  { {+PRED::gt, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1111]
  { {+PRED::le, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1112]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1113]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1114]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1115]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1116]
  { {+PRED::hi, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1117]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1118]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1119]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1120]
  { {+PRED::ls, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1121]
  { {+PRED::al, +PARAM::reg4, +PARAM::num3},
    a32::OPC::cmp_imm, 0x6 },  // cmplt [1122]
  { {+PRED::hi, +PARAM::reg0, +PARAM::num1},
    a32::OPC::movw, 0x6 },  // cmplt [1123]
  { {+PRED::ls, +PARAM::reg0, +PARAM::num2},
    a32::OPC::movw, 0x6 },  // cmplt [1124]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmplt [1125]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1126]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1127]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1128]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmplt [1129]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1130]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1131]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1132]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmplt [1133]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1134]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1135]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1136]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmplt [1137]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1138]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1139]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1140]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmplt [1141]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1142]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1143]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1144]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmplt [1145]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1146]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1147]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1148]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f32, 0x6 },  // cmplt [1149]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1150]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1151]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1152]
  { {+PRED::al, +PARAM::reg3, +PARAM::reg4},
    a32::OPC::vcmpe_f64, 0x6 },  // cmplt [1153]
  { {+PRED::al},
    a32::OPC::vmrs_APSR_nzcv_fpscr, 0x0 },  // cmplt [1154]
  { {+PRED::lt, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1155]
  { {+PRED::pl, +PARAM::reg0, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cmplt [1156]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xe },  // lea [1157]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::add_imm, 0xe },  // lea [1158]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::sub_imm, 0xe },  // lea [1159]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xe },  // lea [1160]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::add_imm, 0xe },  // lea [1161]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::sub_imm, 0xe },  // lea [1162]
  { {+PRED::al, +PARAM::reg0, +PARAM::mem1_num2_lo16},
    a32::OPC::movw, 0x6 },  // lea.mem [1163]
  { {+PRED::al, +PARAM::reg0, +PARAM::mem1_num2_hi16},
    a32::OPC::movt, 0x6 },  // lea.mem [1164]
  { {+PRED::al, +PARAM::reg0, +PARAM::mem1_num2_lo16},
    a32::OPC::movw, 0x6 },  // lea.mem [1165]
  { {+PRED::al, +PARAM::reg0, +PARAM::mem1_num2_hi16},
    a32::OPC::movt, 0x6 },  // lea.mem [1166]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::add_imm, 0xa },  // lea.stk [1167]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // lea.stk [1168]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // lea.stk [1169]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // lea.stk [1170]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // lea.stk [1171]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // lea.stk [1172]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::add_imm, 0xa },  // lea.stk [1173]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // lea.stk [1174]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // lea.stk [1175]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // lea.stk [1176]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // lea.stk [1177]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // lea.stk [1178]
  { {+PRED::al, +PARAM::reg0, +PARAM::fun1_lo16},
    a32::OPC::movw, 0x6 },  // lea.fun [1179]
  { {+PRED::al, +PARAM::reg0, +PARAM::fun1_hi16},
    a32::OPC::movt, 0x6 },  // lea.fun [1180]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1181]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1182]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1183]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1184]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1185]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1186]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1187]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1188]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1189]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1190]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1191]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1192]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1193]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1194]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1195]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1196]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1197]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1198]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1199]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1200]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1201]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xe },  // ld [1202]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldr_imm_add, 0xe },  // ld [1203]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldr_imm_sub, 0xe },  // ld [1204]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xe },  // ld [1205]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrb_imm_add, 0xe },  // ld [1206]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrb_imm_sub, 0xe },  // ld [1207]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xe },  // ld [1208]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrb_imm_add, 0xe },  // ld [1209]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrb_imm_sub, 0xe },  // ld [1210]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::vldr_f32_add, 0xe },  // ld [1211]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::vldr_f32_sub, 0xe },  // ld [1212]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::vldr_f32_add, 0xe },  // ld [1213]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::vldr_f32_sub, 0xe },  // ld [1214]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::vldr_f64_add, 0xe },  // ld [1215]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::vldr_f64_sub, 0xe },  // ld [1216]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::vldr_f64_add, 0xe },  // ld [1217]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::vldr_f64_sub, 0xe },  // ld [1218]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrsb_reg_add, 0xe },  // ld [1219]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrsb_imm_sub, 0xe },  // ld [1220]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrsb_imm_add, 0xe },  // ld [1221]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrsb_reg_add, 0xe },  // ld [1222]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrsb_imm_sub, 0xe },  // ld [1223]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrsb_imm_add, 0xe },  // ld [1224]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrh_reg_add, 0xe },  // ld [1225]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrh_imm_sub, 0xe },  // ld [1226]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrh_imm_add, 0xe },  // ld [1227]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrh_reg_add, 0xe },  // ld [1228]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrh_imm_sub, 0xe },  // ld [1229]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrh_imm_add, 0xe },  // ld [1230]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrsh_reg_add, 0xe },  // ld [1231]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrsh_imm_sub, 0xe },  // ld [1232]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrsh_imm_add, 0xe },  // ld [1233]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::ldrsh_reg_add, 0xe },  // ld [1234]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2_neg},
    a32::OPC::ldrsh_imm_sub, 0xe },  // ld [1235]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a32::OPC::ldrsh_imm_add, 0xe },  // ld [1236]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1237]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1238]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1239]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1240]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1241]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1242]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1243]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1244]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1245]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1246]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1247]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1248]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1249]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1250]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1251]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1252]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1253]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1254]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1255]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1256]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1257]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1258]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1259]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1260]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1261]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1262]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1263]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1264]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1265]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1266]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1267]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1268]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1269]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1270]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1271]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1272]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1273]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1274]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1275]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1276]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1277]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1278]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldr_imm_add, 0xa },  // ld.stk [1279]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1280]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1281]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1282]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1283]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldr_reg_add, 0xa },  // ld.stk [1284]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrb_imm_add, 0xa },  // ld.stk [1285]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1286]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xa },  // ld.stk [1287]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1288]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1289]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xa },  // ld.stk [1290]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrb_imm_add, 0xa },  // ld.stk [1291]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1292]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xa },  // ld.stk [1293]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1294]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1295]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::ldrb_reg_add, 0xa },  // ld.stk [1296]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::vldr_f32_add, 0xa },  // ld.stk [1297]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1298]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // ld.stk [1299]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a32::OPC::vldr_f32_add, 0x6 },  // ld.stk [1300]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::vldr_f32_add, 0xa },  // ld.stk [1301]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1302]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // ld.stk [1303]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a32::OPC::vldr_f32_add, 0x6 },  // ld.stk [1304]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::vldr_f64_add, 0xa },  // ld.stk [1305]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1306]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // ld.stk [1307]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a32::OPC::vldr_f64_add, 0x6 },  // ld.stk [1308]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::vldr_f64_add, 0xa },  // ld.stk [1309]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1310]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // ld.stk [1311]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a32::OPC::vldr_f64_add, 0x6 },  // ld.stk [1312]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrsb_imm_add, 0xa },  // ld.stk [1313]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1314]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsb_reg_add, 0xa },  // ld.stk [1315]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1316]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1317]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsb_reg_add, 0xa },  // ld.stk [1318]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrsb_imm_add, 0xa },  // ld.stk [1319]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1320]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsb_reg_add, 0xa },  // ld.stk [1321]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1322]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1323]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsb_reg_add, 0xa },  // ld.stk [1324]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrh_imm_add, 0xa },  // ld.stk [1325]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1326]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrh_reg_add, 0xa },  // ld.stk [1327]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1328]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1329]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrh_reg_add, 0xa },  // ld.stk [1330]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrh_imm_add, 0xa },  // ld.stk [1331]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1332]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrh_reg_add, 0xa },  // ld.stk [1333]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1334]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1335]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrh_reg_add, 0xa },  // ld.stk [1336]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrsh_imm_add, 0xa },  // ld.stk [1337]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1338]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsh_reg_add, 0xa },  // ld.stk [1339]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1340]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1341]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsh_reg_add, 0xa },  // ld.stk [1342]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::stk1_offset2},
    a32::OPC::ldrsh_imm_add, 0xa },  // ld.stk [1343]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2},
    a32::OPC::movw, 0x6 },  // ld.stk [1344]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsh_reg_add, 0xa },  // ld.stk [1345]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_lo},
    a32::OPC::movw, 0x6 },  // ld.stk [1346]
  { {+PRED::al, +PARAM::reg0, +PARAM::stk1_offset2_hi},
    a32::OPC::movt, 0x6 },  // ld.stk [1347]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0},
    a32::OPC::ldrsh_reg_add, 0xa },  // ld.stk [1348]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1349]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1350]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1351]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1352]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1353]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1354]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1355]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1356]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1357]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1358]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1359]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1360]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1361]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1362]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1363]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1364]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1365]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1366]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1367]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1368]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1369]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x26 },  // st [1370]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xe },  // st [1371]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::str_imm_sub, 0xe },  // st [1372]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x26 },  // st [1373]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xe },  // st [1374]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strb_imm_sub, 0xe },  // st [1375]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x26 },  // st [1376]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xe },  // st [1377]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strb_imm_sub, 0xe },  // st [1378]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x26 },  // st [1379]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xe },  // st [1380]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strb_imm_sub, 0xe },  // st [1381]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x26 },  // st [1382]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xe },  // st [1383]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strb_imm_sub, 0xe },  // st [1384]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xe },  // st [1385]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::vstr_f32_sub, 0xe },  // st [1386]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xe },  // st [1387]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::vstr_f32_sub, 0xe },  // st [1388]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xe },  // st [1389]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::vstr_f64_sub, 0xe },  // st [1390]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xe },  // st [1391]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::vstr_f64_sub, 0xe },  // st [1392]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xe },  // st [1393]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xe },  // st [1394]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strh_imm_sub, 0xe },  // st [1395]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xe },  // st [1396]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xe },  // st [1397]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strh_imm_sub, 0xe },  // st [1398]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xe },  // st [1399]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xe },  // st [1400]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strh_imm_sub, 0xe },  // st [1401]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xe },  // st [1402]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xe },  // st [1403]
  { {+PRED::al, +PARAM::reg0, +PARAM::num1_neg, +PARAM::reg2},
    a32::OPC::strh_imm_sub, 0xe },  // st [1404]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1405]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1406]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1407]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1408]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1409]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1410]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1411]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1412]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1413]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1414]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1415]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1416]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1417]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1418]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1419]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1420]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1421]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1422]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1423]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1424]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1425]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1426]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1427]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1428]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1429]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1430]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1431]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1432]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1433]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1434]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1435]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1436]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1437]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1438]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1439]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1440]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1441]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1442]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1443]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1444]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1445]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1446]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::str_imm_add, 0xc },  // st.stk [1447]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1448]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1449]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1450]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1451]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::str_reg_add, 0x24 },  // st.stk [1452]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xc },  // st.stk [1453]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1454]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1455]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1456]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1457]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1458]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xc },  // st.stk [1459]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1460]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1461]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1462]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1463]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1464]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xc },  // st.stk [1465]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1466]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1467]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1468]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1469]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1470]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strb_imm_add, 0xc },  // st.stk [1471]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1472]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1473]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1474]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1475]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0, +PARAM::reg2},
    a32::OPC::strb_reg_add, 0x24 },  // st.stk [1476]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xc },  // st.stk [1477]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1478]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // st.stk [1479]
  { {+PRED::al, +PARAM::scratch_gpr, 0, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xa },  // st.stk [1480]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xc },  // st.stk [1481]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1482]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // st.stk [1483]
  { {+PRED::al, +PARAM::scratch_gpr, 0, +PARAM::reg2},
    a32::OPC::vstr_f32_add, 0xa },  // st.stk [1484]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xc },  // st.stk [1485]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1486]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // st.stk [1487]
  { {+PRED::al, +PARAM::scratch_gpr, 0, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xa },  // st.stk [1488]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xc },  // st.stk [1489]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1490]
  { {+PRED::al, +PARAM::scratch_gpr, +REG::sp, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // st.stk [1491]
  { {+PRED::al, +PARAM::scratch_gpr, 0, +PARAM::reg2},
    a32::OPC::vstr_f64_add, 0xa },  // st.stk [1492]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xc },  // st.stk [1493]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1494]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1495]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1496]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1497]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1498]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xc },  // st.stk [1499]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1500]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1501]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1502]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1503]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1504]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xc },  // st.stk [1505]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1506]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1507]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1508]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1509]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1510]
  { {+PRED::al, +REG::sp, +PARAM::stk0_offset1, +PARAM::reg2},
    a32::OPC::strh_imm_add, 0xc },  // st.stk [1511]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1512]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1513]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_lo},
    a32::OPC::movw, 0x6 },  // st.stk [1514]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::stk0_offset1_hi},
    a32::OPC::movt, 0x6 },  // st.stk [1515]
  { {+PRED::al, +REG::sp, +PARAM::scratch_gpr, +PARAM::reg2},
    a32::OPC::strh_reg_add, 0xc },  // st.stk [1516]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1517]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1518]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1519]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1520]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1521]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1522]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1523]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1524]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1525]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1526]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1527]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1528]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1529]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1530]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1531]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1532]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1533]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1534]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1535]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1536]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1537]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1538]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1539]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1540]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1541]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1542]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1543]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1544]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1545]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1546]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1547]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1548]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1549]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1550]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1551]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1552]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1553]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1554]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1555]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1556]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1557]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1558]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1559]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1560]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1561]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1562]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1563]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1564]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1565]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1566]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1567]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1568]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1569]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1570]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1571]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1572]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrex, 0x6 },  // cas [1573]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eors_regimm, 0xe },  // cas [1574]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1575]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1576]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strex, 0xe },  // cas [1577]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1578]
  { {+PRED::ne, -8},
    a32::OPC::b, 0x0 },  // cas [1579]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1580]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexh, 0x6 },  // cas [1581]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1582]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1583]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 16},
    a32::OPC::eor_regimm, 0xe },  // cas [1584]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1585]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1586]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexh, 0xe },  // cas [1587]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1588]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1589]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1590]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexh, 0x6 },  // cas [1591]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1592]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1593]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 16},
    a32::OPC::eor_regimm, 0xe },  // cas [1594]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1595]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1596]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexh, 0xe },  // cas [1597]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1598]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1599]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1600]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexh, 0x6 },  // cas [1601]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1602]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1603]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 16},
    a32::OPC::eor_regimm, 0xe },  // cas [1604]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1605]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1606]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexh, 0xe },  // cas [1607]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1608]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1609]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1610]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexh, 0x6 },  // cas [1611]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1612]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1613]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 16},
    a32::OPC::eor_regimm, 0xe },  // cas [1614]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 16},
    a32::OPC::movs_regimm, 0x6 },  // cas [1615]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1616]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexh, 0xe },  // cas [1617]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1618]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1619]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1620]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexb, 0x6 },  // cas [1621]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1622]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1623]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 24},
    a32::OPC::eor_regimm, 0xe },  // cas [1624]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1625]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1626]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexb, 0xe },  // cas [1627]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1628]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1629]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1630]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexb, 0x6 },  // cas [1631]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1632]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1633]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 24},
    a32::OPC::eor_regimm, 0xe },  // cas [1634]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1635]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1636]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexb, 0xe },  // cas [1637]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1638]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1639]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1640]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexb, 0x6 },  // cas [1641]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1642]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1643]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 24},
    a32::OPC::eor_regimm, 0xe },  // cas [1644]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1645]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1646]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexb, 0xe },  // cas [1647]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1648]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1649]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1650]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3},
    a32::OPC::ldrexb, 0x6 },  // cas [1651]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::eor_regimm, 0xe },  // cas [1652]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +SHIFT::lsl, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1653]
  { {+PRED::ne, +PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 24},
    a32::OPC::eor_regimm, 0xe },  // cas [1654]
  { {+PRED::ne, +PARAM::reg0, +PARAM::scratch_gpr, +SHIFT::lsr, 24},
    a32::OPC::movs_regimm, 0x6 },  // cas [1655]
  { {+PRED::ne, 3},
    a32::OPC::b, 0x0 },  // cas [1656]
  { {+PRED::al, +PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a32::OPC::strexb, 0xe },  // cas [1657]
  { {+PRED::al, +PARAM::scratch_gpr, 0},
    a32::OPC::cmp_imm, 0x2 },  // cas [1658]
  { {+PRED::ne, -10},
    a32::OPC::b, 0x0 },  // cas [1659]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x6 },  // cas [1660]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::clz, 0x6 },  // cntlz [1661]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::clz, 0x6 },  // cntlz [1662]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::rbit, 0x6 },  // cnttz [1663]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg0},
    a32::OPC::clz, 0x6 },  // cnttz [1664]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg1},
    a32::OPC::rbit, 0x6 },  // cnttz [1665]
  { {+PRED::al, +PARAM::reg0, +PARAM::reg0},
    a32::OPC::clz, 0x6 },  // cnttz [1666]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1667]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1668]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1669]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1670]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1671]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1672]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1673]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1674]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1675]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1676]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1677]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1678]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1679]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1680]
  { {+PRED::al, +PARAM::reg0, +PARAM::frame_size},
    a32::OPC::movw, 0x6 },  // getfp [1681]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +PARAM::reg0, +SHIFT::lsl, 0},
    a32::OPC::add_regimm, 0xa },  // getfp [1682]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1683]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1684]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1685]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1686]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1687]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1688]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1689]
  { {+PRED::al, +PARAM::reg0, +REG::sp, +SHIFT::lsl, 0},
    a32::OPC::mov_regimm, 0x2 },  // getsp [1690]
};

const uint16_t kPatternJumper[256] = {
 0 /* --- */,  0 /* .mem */,  0 /* .data */,  0 /* .addr.fun */, 
 0 /* .addr.mem */,  0 /* .fun */,  0 /* .bbl */,  0 /* .reg */, 
 0 /* .stk */,  0 /* .jtb */,  0 /* --- */,  0 /* --- */, 
 0 /* --- */,  0 /* --- */,  0 /* --- */,  0 /* --- */, 
 0 /* add */,  6 /* sub */,  14 /* mul */,  18 /* div */, 
 22 /* --- */,  22 /* --- */,  22 /* --- */,  22 /* --- */, 
 22 /* xor */,  26 /* and */,  32 /* or */,  36 /* shl */, 
 40 /* shr */,  44 /* rem */,  44 /* clmul */,  44 /* --- */, 
 44 /* beq */,  54 /* bne */,  64 /* blt */,  78 /* ble */, 
 92 /* --- */,  92 /* --- */,  92 /* --- */,  92 /* --- */, 
 92 /* switch */,  93 /* bra */,  94 /* ret */,  94 /* bsr */, 
 95 /* jsr */,  96 /* syscall */,  97 /* trap */,  98 /* --- */, 
 98 /* pusharg */,  98 /* poparg */,  98 /* conv */,  138 /* bitcast */, 
 154 /* mov */,  196 /* cmpeq */,  332 /* cmplt */,  484 /* --- */, 
 484 /* lea */,  490 /* lea.mem */,  492 /* lea.stk */,  498 /* lea.fun */, 
 499 /* --- */,  499 /* --- */,  499 /* --- */,  499 /* --- */, 
 499 /* ld */,  555 /* ld.mem */,  555 /* ld.stk */,  611 /* --- */, 
 611 /* st */,  667 /* st.mem */,  667 /* st.stk */,  723 /* --- */, 
 723 /* cas */,  739 /* cas.mem */,  739 /* cas.stk */,  739 /* --- */, 
 739 /* --- */,  739 /* --- */,  739 /* --- */,  739 /* --- */, 
 739 /* ceil */,  739 /* floor */,  739 /* round */,  739 /* trunc */, 
 739 /* copysign */,  739 /* sqrt */,  739 /* --- */,  739 /* --- */, 
 739 /* sin */,  739 /* cos */,  739 /* tan */,  739 /* asin */, 
 739 /* acos */,  739 /* atan */,  739 /* exp */,  739 /* log */, 
 739 /* cntlz */,  741 /* cnttz */,  743 /* cntpop */,  743 /* --- */, 
 743 /* --- */,  743 /* --- */,  743 /* --- */,  743 /* --- */, 
 743 /* --- */,  743 /* --- */,  743 /* --- */,  743 /* --- */, 
 743 /* --- */,  743 /* --- */,  743 /* --- */,  743 /* --- */, 
 743 /* nop */,  743 /* nop1 */,  743 /* --- */,  743 /* --- */, 
 743 /* --- */,  743 /* --- */,  743 /* --- */,  743 /* line */, 
 743 /* inline */,  743 /* getfp */,  751 /* getsp */,  759 /* gettp */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* bcopy */,  759 /* --- */,  759 /* bzero */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
 759 /* --- */,  759 /* --- */,  759 /* --- */,  759 /* --- */, 
};

const Pattern kPatterns[] = {
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1], 1 },  // add [0]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[2], 1 },  // add [1]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[3], 1 },  // add [2]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[4], 1 },  // add [3]
  { {DK::F32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[5], 1 },  // add [4]
  { {DK::F64, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[6], 1 },  // add [5]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[7], 1 },  // sub [6]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[8], 1 },  // sub [7]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[9], 1 },  // sub [8]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[10], 1 },  // sub [9]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[11], 1 },  // sub [10]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[12], 1 },  // sub [11]
  { {DK::F32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[13], 1 },  // sub [12]
  { {DK::F64, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[14], 1 },  // sub [13]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[15], 1 },  // mul [14]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[16], 1 },  // mul [15]
  { {DK::F32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[17], 1 },  // mul [16]
  { {DK::F64, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[18], 1 },  // mul [17]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[19], 1 },  // div [18]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[20], 1 },  // div [19]
  { {DK::F32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[21], 1 },  // div [20]
  { {DK::F64, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[22], 1 },  // div [21]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[23], 1 },  // xor [22]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[24], 1 },  // xor [23]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[25], 1 },  // xor [24]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[26], 1 },  // xor [25]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[27], 1 },  // and [26]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[28], 1 },  // and [27]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[29], 1 },  // and [28]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[30], 1 },  // and [29]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[31], 1 },  // and [30]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[32], 1 },  // and [31]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[33], 1 },  // or [32]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[34], 1 },  // or [33]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[35], 1 },  // or [34]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[36], 1 },  // or [35]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[37], 1 },  // shl [36]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_5_bits},
    &kInsTemplates[38], 1 },  // shl [37]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[39], 1 },  // shl [38]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_5_bits},
    &kInsTemplates[40], 1 },  // shl [39]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[41], 1 },  // shr [40]
  { {DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_5_bits},
    &kInsTemplates[42], 1 },  // shr [41]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[43], 1 },  // shr [42]
  { {DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_5_bits},
    &kInsTemplates[44], 1 },  // shr [43]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[45], 2 },  // beq [44]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[47], 2 },  // beq [45]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[49], 2 },  // beq [46]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[51], 2 },  // beq [47]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[53], 2 },  // beq [48]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[55], 2 },  // beq [49]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[57], 2 },  // beq [50]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[59], 2 },  // beq [51]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[61], 3 },  // beq [52]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[64], 3 },  // beq [53]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[67], 2 },  // bne [54]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[69], 2 },  // bne [55]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[71], 2 },  // bne [56]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[73], 2 },  // bne [57]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[75], 2 },  // bne [58]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[77], 2 },  // bne [59]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[79], 2 },  // bne [60]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[81], 2 },  // bne [61]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[83], 3 },  // bne [62]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[86], 3 },  // bne [63]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[89], 2 },  // blt [64]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[91], 2 },  // blt [65]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[93], 2 },  // blt [66]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[95], 2 },  // blt [67]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[97], 2 },  // blt [68]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[99], 2 },  // blt [69]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[101], 2 },  // blt [70]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[103], 2 },  // blt [71]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[105], 2 },  // blt [72]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[107], 2 },  // blt [73]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[109], 2 },  // blt [74]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[111], 2 },  // blt [75]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[113], 3 },  // blt [76]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[116], 3 },  // blt [77]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[119], 2 },  // ble [78]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[121], 2 },  // ble [79]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[123], 2 },  // ble [80]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[125], 2 },  // ble [81]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[127], 2 },  // ble [82]
  { {DK::A32, DK::A32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[129], 2 },  // ble [83]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[131], 2 },  // ble [84]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[133], 2 },  // ble [85]
  { {DK::C32, DK::C32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[135], 2 },  // ble [86]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[137], 2 },  // ble [87]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[139], 2 },  // ble [88]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::pos_8_bits_shifted, IC::invalid, IC::invalid},
    &kInsTemplates[141], 2 },  // ble [89]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[143], 3 },  // ble [90]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[146], 3 },  // ble [91]
  { {DK::U32, DK::INVALID},
    {IC::invalid, IC::invalid},
    &kInsTemplates[149], 3 },  // switch [92]
  { {DK::INVALID},
    {IC::invalid},
    &kInsTemplates[152], 1 },  // bra [93]
  { {DK::INVALID},
    {IC::invalid},
    &kInsTemplates[153], 1 },  // bsr [94]
  { {DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid},
    &kInsTemplates[154], 1 },  // jsr [95]
  { {DK::INVALID, DK::U32},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[155], 6 },  // syscall [96]
  { {},
    {},
    &kInsTemplates[161], 1 },  // trap [97]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[162], 1 },  // conv [98]
  { {DK::U32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[163], 1 },  // conv [99]
  { {DK::S32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[164], 1 },  // conv [100]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[165], 1 },  // conv [101]
  { {DK::U16, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[166], 1 },  // conv [102]
  { {DK::U16, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[167], 1 },  // conv [103]
  { {DK::S16, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[168], 1 },  // conv [104]
  { {DK::S16, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[169], 1 },  // conv [105]
  { {DK::U8, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[170], 1 },  // conv [106]
  { {DK::U8, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[171], 1 },  // conv [107]
  { {DK::S8, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[172], 1 },  // conv [108]
  { {DK::S8, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[173], 1 },  // conv [109]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[174], 1 },  // conv [110]
  { {DK::U16, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[175], 1 },  // conv [111]
  { {DK::S16, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[176], 1 },  // conv [112]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[177], 1 },  // conv [113]
  { {DK::U8, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[178], 1 },  // conv [114]
  { {DK::U8, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[179], 1 },  // conv [115]
  { {DK::S8, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[180], 1 },  // conv [116]
  { {DK::S8, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[181], 1 },  // conv [117]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[182], 1 },  // conv [118]
  { {DK::U8, DK::S8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[183], 1 },  // conv [119]
  { {DK::S8, DK::U8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[184], 1 },  // conv [120]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[185], 1 },  // conv [121]
  { {DK::U32, DK::U8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[186], 1 },  // conv [122]
  { {DK::U32, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[187], 1 },  // conv [123]
  { {DK::U32, DK::S8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[188], 1 },  // conv [124]
  { {DK::U32, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[189], 1 },  // conv [125]
  { {DK::S32, DK::U8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[190], 1 },  // conv [126]
  { {DK::S32, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[191], 1 },  // conv [127]
  { {DK::S32, DK::S8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[192], 1 },  // conv [128]
  { {DK::S32, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[193], 1 },  // conv [129]
  { {DK::S32, DK::F32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[194], 2 },  // conv [130]
  { {DK::U32, DK::F32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[196], 2 },  // conv [131]
  { {DK::S32, DK::F64},
    {IC::invalid, IC::invalid},
    &kInsTemplates[198], 2 },  // conv [132]
  { {DK::U32, DK::F64},
    {IC::invalid, IC::invalid},
    &kInsTemplates[200], 2 },  // conv [133]
  { {DK::F32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[202], 2 },  // conv [134]
  { {DK::F32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[204], 2 },  // conv [135]
  { {DK::F64, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[206], 2 },  // conv [136]
  { {DK::F64, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[208], 2 },  // conv [137]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[210], 1 },  // bitcast [138]
  { {DK::U32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[211], 1 },  // bitcast [139]
  { {DK::U32, DK::A32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[212], 1 },  // bitcast [140]
  { {DK::U32, DK::C32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[213], 1 },  // bitcast [141]
  { {DK::S32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[214], 1 },  // bitcast [142]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[215], 1 },  // bitcast [143]
  { {DK::S32, DK::A32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[216], 1 },  // bitcast [144]
  { {DK::S32, DK::C32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[217], 1 },  // bitcast [145]
  { {DK::A32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[218], 1 },  // bitcast [146]
  { {DK::A32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[219], 1 },  // bitcast [147]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[220], 1 },  // bitcast [148]
  { {DK::A32, DK::C32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[221], 1 },  // bitcast [149]
  { {DK::C32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[222], 1 },  // bitcast [150]
  { {DK::C32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[223], 1 },  // bitcast [151]
  { {DK::C32, DK::A32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[224], 1 },  // bitcast [152]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[225], 1 },  // bitcast [153]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[226], 1 },  // mov [154]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[227], 1 },  // mov [155]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[228], 1 },  // mov [156]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[229], 1 },  // mov [157]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[230], 2 },  // mov [158]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[232], 1 },  // mov [159]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[233], 1 },  // mov [160]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[234], 1 },  // mov [161]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[235], 1 },  // mov [162]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[236], 2 },  // mov [163]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[238], 1 },  // mov [164]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[239], 1 },  // mov [165]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[240], 1 },  // mov [166]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[241], 1 },  // mov [167]
  { {DK::A32, DK::A32},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[242], 2 },  // mov [168]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[244], 1 },  // mov [169]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[245], 1 },  // mov [170]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[246], 1 },  // mov [171]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[247], 1 },  // mov [172]
  { {DK::C32, DK::C32},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[248], 2 },  // mov [173]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[250], 1 },  // mov [174]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[251], 1 },  // mov [175]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[252], 1 },  // mov [176]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[253], 1 },  // mov [177]
  { {DK::U16, DK::U16},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[254], 2 },  // mov [178]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[256], 1 },  // mov [179]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[257], 1 },  // mov [180]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[258], 1 },  // mov [181]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::invalid},
    &kInsTemplates[259], 1 },  // mov [182]
  { {DK::S16, DK::S16},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[260], 2 },  // mov [183]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[262], 1 },  // mov [184]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[263], 1 },  // mov [185]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[264], 1 },  // mov [186]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[265], 1 },  // mov [187]
  { {DK::U8, DK::U8},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[266], 2 },  // mov [188]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[268], 1 },  // mov [189]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::not_8_bits_shifted},
    &kInsTemplates[269], 1 },  // mov [190]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::pos_16_bits},
    &kInsTemplates[270], 1 },  // mov [191]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::invalid},
    &kInsTemplates[271], 1 },  // mov [192]
  { {DK::S8, DK::S8},
    {IC::invalid, IC::any_32_bits},
    &kInsTemplates[272], 2 },  // mov [193]
  { {DK::F32, DK::F32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[274], 1 },  // mov [194]
  { {DK::F64, DK::F64},
    {IC::invalid, IC::invalid},
    &kInsTemplates[275], 1 },  // mov [195]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[276], 3 },  // cmpeq [196]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[279], 3 },  // cmpeq [197]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[282], 3 },  // cmpeq [198]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[285], 3 },  // cmpeq [199]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[288], 3 },  // cmpeq [200]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[291], 3 },  // cmpeq [201]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[294], 3 },  // cmpeq [202]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[297], 3 },  // cmpeq [203]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[300], 3 },  // cmpeq [204]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[303], 3 },  // cmpeq [205]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[306], 3 },  // cmpeq [206]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[309], 3 },  // cmpeq [207]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[312], 3 },  // cmpeq [208]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[315], 3 },  // cmpeq [209]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[318], 3 },  // cmpeq [210]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[321], 3 },  // cmpeq [211]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[324], 3 },  // cmpeq [212]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[327], 3 },  // cmpeq [213]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[330], 3 },  // cmpeq [214]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[333], 3 },  // cmpeq [215]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[336], 3 },  // cmpeq [216]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[339], 3 },  // cmpeq [217]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[342], 3 },  // cmpeq [218]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[345], 3 },  // cmpeq [219]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[348], 3 },  // cmpeq [220]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[351], 3 },  // cmpeq [221]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[354], 3 },  // cmpeq [222]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[357], 3 },  // cmpeq [223]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[360], 3 },  // cmpeq [224]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[363], 3 },  // cmpeq [225]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[366], 3 },  // cmpeq [226]
  { {DK::U32, DK::U32, DK::U32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[369], 3 },  // cmpeq [227]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[372], 3 },  // cmpeq [228]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[375], 3 },  // cmpeq [229]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[378], 3 },  // cmpeq [230]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[381], 3 },  // cmpeq [231]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[384], 3 },  // cmpeq [232]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[387], 3 },  // cmpeq [233]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[390], 3 },  // cmpeq [234]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[393], 3 },  // cmpeq [235]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[396], 3 },  // cmpeq [236]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[399], 3 },  // cmpeq [237]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[402], 3 },  // cmpeq [238]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[405], 3 },  // cmpeq [239]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[408], 3 },  // cmpeq [240]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[411], 3 },  // cmpeq [241]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[414], 3 },  // cmpeq [242]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[417], 3 },  // cmpeq [243]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[420], 3 },  // cmpeq [244]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[423], 3 },  // cmpeq [245]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[426], 3 },  // cmpeq [246]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[429], 3 },  // cmpeq [247]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[432], 3 },  // cmpeq [248]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[435], 3 },  // cmpeq [249]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[438], 3 },  // cmpeq [250]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[441], 3 },  // cmpeq [251]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[444], 3 },  // cmpeq [252]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[447], 3 },  // cmpeq [253]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[450], 3 },  // cmpeq [254]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[453], 3 },  // cmpeq [255]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[456], 3 },  // cmpeq [256]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[459], 3 },  // cmpeq [257]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[462], 3 },  // cmpeq [258]
  { {DK::S32, DK::S32, DK::S32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[465], 3 },  // cmpeq [259]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[468], 3 },  // cmpeq [260]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[471], 3 },  // cmpeq [261]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[474], 3 },  // cmpeq [262]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[477], 3 },  // cmpeq [263]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[480], 3 },  // cmpeq [264]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[483], 3 },  // cmpeq [265]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[486], 3 },  // cmpeq [266]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[489], 3 },  // cmpeq [267]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[492], 3 },  // cmpeq [268]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[495], 3 },  // cmpeq [269]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[498], 3 },  // cmpeq [270]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[501], 3 },  // cmpeq [271]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[504], 3 },  // cmpeq [272]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[507], 3 },  // cmpeq [273]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[510], 3 },  // cmpeq [274]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[513], 3 },  // cmpeq [275]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[516], 3 },  // cmpeq [276]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[519], 3 },  // cmpeq [277]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[522], 3 },  // cmpeq [278]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[525], 3 },  // cmpeq [279]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[528], 3 },  // cmpeq [280]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[531], 3 },  // cmpeq [281]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[534], 3 },  // cmpeq [282]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[537], 3 },  // cmpeq [283]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[540], 3 },  // cmpeq [284]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[543], 3 },  // cmpeq [285]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[546], 3 },  // cmpeq [286]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[549], 3 },  // cmpeq [287]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[552], 3 },  // cmpeq [288]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[555], 3 },  // cmpeq [289]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[558], 3 },  // cmpeq [290]
  { {DK::A32, DK::A32, DK::A32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[561], 3 },  // cmpeq [291]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[564], 3 },  // cmpeq [292]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[567], 3 },  // cmpeq [293]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[570], 3 },  // cmpeq [294]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[573], 3 },  // cmpeq [295]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[576], 3 },  // cmpeq [296]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[579], 3 },  // cmpeq [297]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[582], 3 },  // cmpeq [298]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[585], 3 },  // cmpeq [299]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[588], 3 },  // cmpeq [300]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[591], 3 },  // cmpeq [301]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[594], 3 },  // cmpeq [302]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[597], 3 },  // cmpeq [303]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[600], 3 },  // cmpeq [304]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[603], 3 },  // cmpeq [305]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[606], 3 },  // cmpeq [306]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[609], 3 },  // cmpeq [307]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[612], 3 },  // cmpeq [308]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[615], 3 },  // cmpeq [309]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[618], 3 },  // cmpeq [310]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[621], 3 },  // cmpeq [311]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[624], 3 },  // cmpeq [312]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[627], 3 },  // cmpeq [313]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[630], 3 },  // cmpeq [314]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[633], 3 },  // cmpeq [315]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[636], 3 },  // cmpeq [316]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[639], 3 },  // cmpeq [317]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[642], 3 },  // cmpeq [318]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[645], 3 },  // cmpeq [319]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[648], 3 },  // cmpeq [320]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[651], 3 },  // cmpeq [321]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[654], 3 },  // cmpeq [322]
  { {DK::C32, DK::C32, DK::C32, DK::C32, DK::C32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[657], 3 },  // cmpeq [323]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[660], 4 },  // cmpeq [324]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[664], 4 },  // cmpeq [325]
  { {DK::A32, DK::A32, DK::A32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[668], 4 },  // cmpeq [326]
  { {DK::A32, DK::A32, DK::A32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[672], 4 },  // cmpeq [327]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[676], 4 },  // cmpeq [328]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[680], 4 },  // cmpeq [329]
  { {DK::C32, DK::C32, DK::C32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[684], 4 },  // cmpeq [330]
  { {DK::C32, DK::C32, DK::C32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[688], 4 },  // cmpeq [331]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[692], 3 },  // cmplt [332]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[695], 3 },  // cmplt [333]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[698], 3 },  // cmplt [334]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[701], 3 },  // cmplt [335]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[704], 3 },  // cmplt [336]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[707], 3 },  // cmplt [337]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[710], 3 },  // cmplt [338]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[713], 3 },  // cmplt [339]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[716], 3 },  // cmplt [340]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[719], 3 },  // cmplt [341]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[722], 3 },  // cmplt [342]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[725], 3 },  // cmplt [343]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[728], 3 },  // cmplt [344]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[731], 3 },  // cmplt [345]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[734], 3 },  // cmplt [346]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[737], 3 },  // cmplt [347]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[740], 3 },  // cmplt [348]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[743], 3 },  // cmplt [349]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[746], 3 },  // cmplt [350]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[749], 3 },  // cmplt [351]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[752], 3 },  // cmplt [352]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[755], 3 },  // cmplt [353]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[758], 3 },  // cmplt [354]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[761], 3 },  // cmplt [355]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[764], 3 },  // cmplt [356]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[767], 3 },  // cmplt [357]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[770], 3 },  // cmplt [358]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[773], 3 },  // cmplt [359]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[776], 3 },  // cmplt [360]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[779], 3 },  // cmplt [361]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[782], 3 },  // cmplt [362]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[785], 3 },  // cmplt [363]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[788], 3 },  // cmplt [364]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[791], 3 },  // cmplt [365]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[794], 3 },  // cmplt [366]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[797], 3 },  // cmplt [367]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[800], 3 },  // cmplt [368]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[803], 3 },  // cmplt [369]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[806], 3 },  // cmplt [370]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[809], 3 },  // cmplt [371]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[812], 3 },  // cmplt [372]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[815], 3 },  // cmplt [373]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[818], 3 },  // cmplt [374]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[821], 3 },  // cmplt [375]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[824], 3 },  // cmplt [376]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[827], 3 },  // cmplt [377]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[830], 3 },  // cmplt [378]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[833], 3 },  // cmplt [379]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[836], 3 },  // cmplt [380]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[839], 3 },  // cmplt [381]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[842], 3 },  // cmplt [382]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[845], 3 },  // cmplt [383]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[848], 3 },  // cmplt [384]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[851], 3 },  // cmplt [385]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[854], 3 },  // cmplt [386]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[857], 3 },  // cmplt [387]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[860], 3 },  // cmplt [388]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[863], 3 },  // cmplt [389]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[866], 3 },  // cmplt [390]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[869], 3 },  // cmplt [391]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[872], 3 },  // cmplt [392]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[875], 3 },  // cmplt [393]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[878], 3 },  // cmplt [394]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[881], 3 },  // cmplt [395]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[884], 3 },  // cmplt [396]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[887], 3 },  // cmplt [397]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[890], 3 },  // cmplt [398]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[893], 3 },  // cmplt [399]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[896], 3 },  // cmplt [400]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[899], 3 },  // cmplt [401]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[902], 3 },  // cmplt [402]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[905], 3 },  // cmplt [403]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[908], 3 },  // cmplt [404]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[911], 3 },  // cmplt [405]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[914], 3 },  // cmplt [406]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[917], 3 },  // cmplt [407]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[920], 3 },  // cmplt [408]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[923], 3 },  // cmplt [409]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[926], 3 },  // cmplt [410]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[929], 3 },  // cmplt [411]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[932], 3 },  // cmplt [412]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[935], 3 },  // cmplt [413]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[938], 3 },  // cmplt [414]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[941], 3 },  // cmplt [415]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[944], 3 },  // cmplt [416]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[947], 3 },  // cmplt [417]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[950], 3 },  // cmplt [418]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[953], 3 },  // cmplt [419]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[956], 3 },  // cmplt [420]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[959], 3 },  // cmplt [421]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[962], 3 },  // cmplt [422]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[965], 3 },  // cmplt [423]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[968], 3 },  // cmplt [424]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[971], 3 },  // cmplt [425]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::invalid},
    &kInsTemplates[974], 3 },  // cmplt [426]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[977], 3 },  // cmplt [427]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[980], 3 },  // cmplt [428]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[983], 3 },  // cmplt [429]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[986], 3 },  // cmplt [430]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[989], 3 },  // cmplt [431]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[992], 3 },  // cmplt [432]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[995], 3 },  // cmplt [433]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[998], 3 },  // cmplt [434]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1001], 3 },  // cmplt [435]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1004], 3 },  // cmplt [436]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1007], 3 },  // cmplt [437]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1010], 3 },  // cmplt [438]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1013], 3 },  // cmplt [439]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1016], 3 },  // cmplt [440]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1019], 3 },  // cmplt [441]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1022], 3 },  // cmplt [442]
  { {DK::A32, DK::A32, DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1025], 3 },  // cmplt [443]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1028], 3 },  // cmplt [444]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1031], 3 },  // cmplt [445]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1034], 3 },  // cmplt [446]
  { {DK::A32, DK::A32, DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1037], 3 },  // cmplt [447]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1040], 3 },  // cmplt [448]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1043], 3 },  // cmplt [449]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1046], 3 },  // cmplt [450]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1049], 3 },  // cmplt [451]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1052], 3 },  // cmplt [452]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1055], 3 },  // cmplt [453]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1058], 3 },  // cmplt [454]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1061], 3 },  // cmplt [455]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1064], 3 },  // cmplt [456]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1067], 3 },  // cmplt [457]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1070], 3 },  // cmplt [458]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1073], 3 },  // cmplt [459]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1076], 3 },  // cmplt [460]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1079], 3 },  // cmplt [461]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1082], 3 },  // cmplt [462]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1085], 3 },  // cmplt [463]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1088], 3 },  // cmplt [464]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1091], 3 },  // cmplt [465]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1094], 3 },  // cmplt [466]
  { {DK::C32, DK::C32, DK::C32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1097], 3 },  // cmplt [467]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1100], 3 },  // cmplt [468]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1103], 3 },  // cmplt [469]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1106], 3 },  // cmplt [470]
  { {DK::C32, DK::C32, DK::C32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1109], 3 },  // cmplt [471]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1112], 3 },  // cmplt [472]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::invalid, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1115], 3 },  // cmplt [473]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::invalid, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1118], 3 },  // cmplt [474]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::A32},
    {IC::invalid, IC::pos_16_bits, IC::pos_16_bits, IC::pos_8_bits_shifted, IC::invalid},
    &kInsTemplates[1121], 3 },  // cmplt [475]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1124], 4 },  // cmplt [476]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1128], 4 },  // cmplt [477]
  { {DK::A32, DK::A32, DK::A32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1132], 4 },  // cmplt [478]
  { {DK::A32, DK::A32, DK::A32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1136], 4 },  // cmplt [479]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1140], 4 },  // cmplt [480]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1144], 4 },  // cmplt [481]
  { {DK::C32, DK::C32, DK::C32, DK::F32, DK::F32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1148], 4 },  // cmplt [482]
  { {DK::C32, DK::C32, DK::C32, DK::F64, DK::F64},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1152], 4 },  // cmplt [483]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1156], 1 },  // lea [484]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[1157], 1 },  // lea [485]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_shifted},
    &kInsTemplates[1158], 1 },  // lea [486]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1159], 1 },  // lea [487]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_shifted},
    &kInsTemplates[1160], 1 },  // lea [488]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_shifted},
    &kInsTemplates[1161], 1 },  // lea [489]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1162], 2 },  // lea.mem [490]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1164], 2 },  // lea.mem [491]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_shifted},
    &kInsTemplates[1166], 1 },  // lea.stk [492]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1167], 2 },  // lea.stk [493]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1169], 3 },  // lea.stk [494]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_shifted},
    &kInsTemplates[1172], 1 },  // lea.stk [495]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1173], 2 },  // lea.stk [496]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1175], 3 },  // lea.stk [497]
  { {DK::C32, DK::INVALID},
    {IC::invalid, IC::invalid},
    &kInsTemplates[1178], 2 },  // lea.fun [498]
  { {DK::U32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1180], 1 },  // ld [499]
  { {DK::U32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1181], 1 },  // ld [500]
  { {DK::U32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1182], 1 },  // ld [501]
  { {DK::U32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1183], 1 },  // ld [502]
  { {DK::U32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1184], 1 },  // ld [503]
  { {DK::U32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1185], 1 },  // ld [504]
  { {DK::S32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1186], 1 },  // ld [505]
  { {DK::S32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1187], 1 },  // ld [506]
  { {DK::S32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1188], 1 },  // ld [507]
  { {DK::S32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1189], 1 },  // ld [508]
  { {DK::S32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1190], 1 },  // ld [509]
  { {DK::S32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1191], 1 },  // ld [510]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1192], 1 },  // ld [511]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1193], 1 },  // ld [512]
  { {DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1194], 1 },  // ld [513]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1195], 1 },  // ld [514]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1196], 1 },  // ld [515]
  { {DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1197], 1 },  // ld [516]
  { {DK::C32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1198], 1 },  // ld [517]
  { {DK::C32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1199], 1 },  // ld [518]
  { {DK::C32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1200], 1 },  // ld [519]
  { {DK::C32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1201], 1 },  // ld [520]
  { {DK::C32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1202], 1 },  // ld [521]
  { {DK::C32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1203], 1 },  // ld [522]
  { {DK::U8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1204], 1 },  // ld [523]
  { {DK::U8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1205], 1 },  // ld [524]
  { {DK::U8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1206], 1 },  // ld [525]
  { {DK::U8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1207], 1 },  // ld [526]
  { {DK::U8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_12_bits},
    &kInsTemplates[1208], 1 },  // ld [527]
  { {DK::U8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_12_bits},
    &kInsTemplates[1209], 1 },  // ld [528]
  { {DK::F32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_times_4},
    &kInsTemplates[1210], 1 },  // ld [529]
  { {DK::F32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_times_4},
    &kInsTemplates[1211], 1 },  // ld [530]
  { {DK::F32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_times_4},
    &kInsTemplates[1212], 1 },  // ld [531]
  { {DK::F32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_times_4},
    &kInsTemplates[1213], 1 },  // ld [532]
  { {DK::F64, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_times_4},
    &kInsTemplates[1214], 1 },  // ld [533]
  { {DK::F64, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_times_4},
    &kInsTemplates[1215], 1 },  // ld [534]
  { {DK::F64, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits_times_4},
    &kInsTemplates[1216], 1 },  // ld [535]
  { {DK::F64, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits_times_4},
    &kInsTemplates[1217], 1 },  // ld [536]
  { {DK::S8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1218], 1 },  // ld [537]
  { {DK::S8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1219], 1 },  // ld [538]
  { {DK::S8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1220], 1 },  // ld [539]
  { {DK::S8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1221], 1 },  // ld [540]
  { {DK::S8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1222], 1 },  // ld [541]
  { {DK::S8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1223], 1 },  // ld [542]
  { {DK::U16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1224], 1 },  // ld [543]
  { {DK::U16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1225], 1 },  // ld [544]
  { {DK::U16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1226], 1 },  // ld [545]
  { {DK::U16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1227], 1 },  // ld [546]
  { {DK::U16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1228], 1 },  // ld [547]
  { {DK::U16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1229], 1 },  // ld [548]
  { {DK::S16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1230], 1 },  // ld [549]
  { {DK::S16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1231], 1 },  // ld [550]
  { {DK::S16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1232], 1 },  // ld [551]
  { {DK::S16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1233], 1 },  // ld [552]
  { {DK::S16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::neg_8_bits},
    &kInsTemplates[1234], 1 },  // ld [553]
  { {DK::S16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_8_bits},
    &kInsTemplates[1235], 1 },  // ld [554]
  { {DK::U32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1236], 1 },  // ld.stk [555]
  { {DK::U32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1237], 2 },  // ld.stk [556]
  { {DK::U32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1239], 3 },  // ld.stk [557]
  { {DK::U32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1242], 1 },  // ld.stk [558]
  { {DK::U32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1243], 2 },  // ld.stk [559]
  { {DK::U32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1245], 3 },  // ld.stk [560]
  { {DK::S32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1248], 1 },  // ld.stk [561]
  { {DK::S32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1249], 2 },  // ld.stk [562]
  { {DK::S32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1251], 3 },  // ld.stk [563]
  { {DK::S32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1254], 1 },  // ld.stk [564]
  { {DK::S32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1255], 2 },  // ld.stk [565]
  { {DK::S32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1257], 3 },  // ld.stk [566]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1260], 1 },  // ld.stk [567]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1261], 2 },  // ld.stk [568]
  { {DK::A32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1263], 3 },  // ld.stk [569]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1266], 1 },  // ld.stk [570]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1267], 2 },  // ld.stk [571]
  { {DK::A32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1269], 3 },  // ld.stk [572]
  { {DK::C32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1272], 1 },  // ld.stk [573]
  { {DK::C32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1273], 2 },  // ld.stk [574]
  { {DK::C32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1275], 3 },  // ld.stk [575]
  { {DK::C32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1278], 1 },  // ld.stk [576]
  { {DK::C32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1279], 2 },  // ld.stk [577]
  { {DK::C32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1281], 3 },  // ld.stk [578]
  { {DK::U8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1284], 1 },  // ld.stk [579]
  { {DK::U8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1285], 2 },  // ld.stk [580]
  { {DK::U8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1287], 3 },  // ld.stk [581]
  { {DK::U8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_12_bits},
    &kInsTemplates[1290], 1 },  // ld.stk [582]
  { {DK::U8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1291], 2 },  // ld.stk [583]
  { {DK::U8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1293], 3 },  // ld.stk [584]
  { {DK::F32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_times_4},
    &kInsTemplates[1296], 1 },  // ld.stk [585]
  { {DK::F32, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1297], 3 },  // ld.stk [586]
  { {DK::F32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_times_4},
    &kInsTemplates[1300], 1 },  // ld.stk [587]
  { {DK::F32, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1301], 3 },  // ld.stk [588]
  { {DK::F64, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_times_4},
    &kInsTemplates[1304], 1 },  // ld.stk [589]
  { {DK::F64, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1305], 3 },  // ld.stk [590]
  { {DK::F64, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits_times_4},
    &kInsTemplates[1308], 1 },  // ld.stk [591]
  { {DK::F64, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1309], 3 },  // ld.stk [592]
  { {DK::S8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1312], 1 },  // ld.stk [593]
  { {DK::S8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1313], 2 },  // ld.stk [594]
  { {DK::S8, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1315], 3 },  // ld.stk [595]
  { {DK::S8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1318], 1 },  // ld.stk [596]
  { {DK::S8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1319], 2 },  // ld.stk [597]
  { {DK::S8, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1321], 3 },  // ld.stk [598]
  { {DK::U16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1324], 1 },  // ld.stk [599]
  { {DK::U16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1325], 2 },  // ld.stk [600]
  { {DK::U16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1327], 3 },  // ld.stk [601]
  { {DK::U16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1330], 1 },  // ld.stk [602]
  { {DK::U16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1331], 2 },  // ld.stk [603]
  { {DK::U16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1333], 3 },  // ld.stk [604]
  { {DK::S16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1336], 1 },  // ld.stk [605]
  { {DK::S16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1337], 2 },  // ld.stk [606]
  { {DK::S16, DK::INVALID, DK::U32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1339], 3 },  // ld.stk [607]
  { {DK::S16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_8_bits},
    &kInsTemplates[1342], 1 },  // ld.stk [608]
  { {DK::S16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1343], 2 },  // ld.stk [609]
  { {DK::S16, DK::INVALID, DK::S32},
    {IC::invalid, IC::invalid, IC::any_32_bits},
    &kInsTemplates[1345], 3 },  // ld.stk [610]
  { {DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1348], 1 },  // st [611]
  { {DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1349], 1 },  // st [612]
  { {DK::A32, DK::U32, DK::U32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1350], 1 },  // st [613]
  { {DK::A32, DK::S32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1351], 1 },  // st [614]
  { {DK::A32, DK::S32, DK::U32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1352], 1 },  // st [615]
  { {DK::A32, DK::S32, DK::U32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1353], 1 },  // st [616]
  { {DK::A32, DK::U32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1354], 1 },  // st [617]
  { {DK::A32, DK::U32, DK::S32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1355], 1 },  // st [618]
  { {DK::A32, DK::U32, DK::S32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1356], 1 },  // st [619]
  { {DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1357], 1 },  // st [620]
  { {DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1358], 1 },  // st [621]
  { {DK::A32, DK::S32, DK::S32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1359], 1 },  // st [622]
  { {DK::A32, DK::U32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1360], 1 },  // st [623]
  { {DK::A32, DK::U32, DK::A32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1361], 1 },  // st [624]
  { {DK::A32, DK::U32, DK::A32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1362], 1 },  // st [625]
  { {DK::A32, DK::S32, DK::A32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1363], 1 },  // st [626]
  { {DK::A32, DK::S32, DK::A32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1364], 1 },  // st [627]
  { {DK::A32, DK::S32, DK::A32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1365], 1 },  // st [628]
  { {DK::A32, DK::U32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1366], 1 },  // st [629]
  { {DK::A32, DK::U32, DK::C32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1367], 1 },  // st [630]
  { {DK::A32, DK::U32, DK::C32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1368], 1 },  // st [631]
  { {DK::A32, DK::S32, DK::C32},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1369], 1 },  // st [632]
  { {DK::A32, DK::S32, DK::C32},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1370], 1 },  // st [633]
  { {DK::A32, DK::S32, DK::C32},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1371], 1 },  // st [634]
  { {DK::A32, DK::U32, DK::U8},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1372], 1 },  // st [635]
  { {DK::A32, DK::U32, DK::U8},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1373], 1 },  // st [636]
  { {DK::A32, DK::U32, DK::U8},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1374], 1 },  // st [637]
  { {DK::A32, DK::S32, DK::U8},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1375], 1 },  // st [638]
  { {DK::A32, DK::S32, DK::U8},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1376], 1 },  // st [639]
  { {DK::A32, DK::S32, DK::U8},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1377], 1 },  // st [640]
  { {DK::A32, DK::U32, DK::S8},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1378], 1 },  // st [641]
  { {DK::A32, DK::U32, DK::S8},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1379], 1 },  // st [642]
  { {DK::A32, DK::U32, DK::S8},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1380], 1 },  // st [643]
  { {DK::A32, DK::S32, DK::S8},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1381], 1 },  // st [644]
  { {DK::A32, DK::S32, DK::S8},
    {IC::invalid, IC::pos_12_bits, IC::invalid},
    &kInsTemplates[1382], 1 },  // st [645]
  { {DK::A32, DK::S32, DK::S8},
    {IC::invalid, IC::neg_12_bits, IC::invalid},
    &kInsTemplates[1383], 1 },  // st [646]
  { {DK::A32, DK::U32, DK::F32},
    {IC::invalid, IC::pos_8_bits_times_4, IC::invalid},
    &kInsTemplates[1384], 1 },  // st [647]
  { {DK::A32, DK::U32, DK::F32},
    {IC::invalid, IC::neg_8_bits_times_4, IC::invalid},
    &kInsTemplates[1385], 1 },  // st [648]
  { {DK::A32, DK::S32, DK::F32},
    {IC::invalid, IC::pos_8_bits_times_4, IC::invalid},
    &kInsTemplates[1386], 1 },  // st [649]
  { {DK::A32, DK::S32, DK::F32},
    {IC::invalid, IC::neg_8_bits_times_4, IC::invalid},
    &kInsTemplates[1387], 1 },  // st [650]
  { {DK::A32, DK::U32, DK::F64},
    {IC::invalid, IC::pos_8_bits_times_4, IC::invalid},
    &kInsTemplates[1388], 1 },  // st [651]
  { {DK::A32, DK::U32, DK::F64},
    {IC::invalid, IC::neg_8_bits_times_4, IC::invalid},
    &kInsTemplates[1389], 1 },  // st [652]
  { {DK::A32, DK::S32, DK::F64},
    {IC::invalid, IC::pos_8_bits_times_4, IC::invalid},
    &kInsTemplates[1390], 1 },  // st [653]
  { {DK::A32, DK::S32, DK::F64},
    {IC::invalid, IC::neg_8_bits_times_4, IC::invalid},
    &kInsTemplates[1391], 1 },  // st [654]
  { {DK::A32, DK::U32, DK::U16},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1392], 1 },  // st [655]
  { {DK::A32, DK::U32, DK::U16},
    {IC::invalid, IC::pos_8_bits, IC::invalid},
    &kInsTemplates[1393], 1 },  // st [656]
  { {DK::A32, DK::U32, DK::U16},
    {IC::invalid, IC::neg_8_bits, IC::invalid},
    &kInsTemplates[1394], 1 },  // st [657]
  { {DK::A32, DK::S32, DK::U16},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1395], 1 },  // st [658]
  { {DK::A32, DK::S32, DK::U16},
    {IC::invalid, IC::pos_8_bits, IC::invalid},
    &kInsTemplates[1396], 1 },  // st [659]
  { {DK::A32, DK::S32, DK::U16},
    {IC::invalid, IC::neg_8_bits, IC::invalid},
    &kInsTemplates[1397], 1 },  // st [660]
  { {DK::A32, DK::U32, DK::S16},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1398], 1 },  // st [661]
  { {DK::A32, DK::U32, DK::S16},
    {IC::invalid, IC::pos_8_bits, IC::invalid},
    &kInsTemplates[1399], 1 },  // st [662]
  { {DK::A32, DK::U32, DK::S16},
    {IC::invalid, IC::neg_8_bits, IC::invalid},
    &kInsTemplates[1400], 1 },  // st [663]
  { {DK::A32, DK::S32, DK::S16},
    {IC::invalid, IC::invalid, IC::invalid},
    &kInsTemplates[1401], 1 },  // st [664]
  { {DK::A32, DK::S32, DK::S16},
    {IC::invalid, IC::pos_8_bits, IC::invalid},
    &kInsTemplates[1402], 1 },  // st [665]
  { {DK::A32, DK::S32, DK::S16},
    {IC::invalid, IC::neg_8_bits, IC::invalid},
    &kInsTemplates[1403], 1 },  // st [666]
  { {DK::INVALID, DK::U32, DK::U32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1404], 1 },  // st.stk [667]
  { {DK::INVALID, DK::U32, DK::U32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1405], 2 },  // st.stk [668]
  { {DK::INVALID, DK::U32, DK::U32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1407], 3 },  // st.stk [669]
  { {DK::INVALID, DK::S32, DK::U32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1410], 1 },  // st.stk [670]
  { {DK::INVALID, DK::S32, DK::U32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1411], 2 },  // st.stk [671]
  { {DK::INVALID, DK::S32, DK::U32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1413], 3 },  // st.stk [672]
  { {DK::INVALID, DK::U32, DK::S32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1416], 1 },  // st.stk [673]
  { {DK::INVALID, DK::U32, DK::S32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1417], 2 },  // st.stk [674]
  { {DK::INVALID, DK::U32, DK::S32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1419], 3 },  // st.stk [675]
  { {DK::INVALID, DK::S32, DK::S32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1422], 1 },  // st.stk [676]
  { {DK::INVALID, DK::S32, DK::S32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1423], 2 },  // st.stk [677]
  { {DK::INVALID, DK::S32, DK::S32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1425], 3 },  // st.stk [678]
  { {DK::INVALID, DK::U32, DK::A32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1428], 1 },  // st.stk [679]
  { {DK::INVALID, DK::U32, DK::A32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1429], 2 },  // st.stk [680]
  { {DK::INVALID, DK::U32, DK::A32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1431], 3 },  // st.stk [681]
  { {DK::INVALID, DK::S32, DK::A32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1434], 1 },  // st.stk [682]
  { {DK::INVALID, DK::S32, DK::A32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1435], 2 },  // st.stk [683]
  { {DK::INVALID, DK::S32, DK::A32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1437], 3 },  // st.stk [684]
  { {DK::INVALID, DK::U32, DK::C32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1440], 1 },  // st.stk [685]
  { {DK::INVALID, DK::U32, DK::C32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1441], 2 },  // st.stk [686]
  { {DK::INVALID, DK::U32, DK::C32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1443], 3 },  // st.stk [687]
  { {DK::INVALID, DK::S32, DK::C32},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1446], 1 },  // st.stk [688]
  { {DK::INVALID, DK::S32, DK::C32},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1447], 2 },  // st.stk [689]
  { {DK::INVALID, DK::S32, DK::C32},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1449], 3 },  // st.stk [690]
  { {DK::INVALID, DK::U32, DK::U8},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1452], 1 },  // st.stk [691]
  { {DK::INVALID, DK::U32, DK::U8},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1453], 2 },  // st.stk [692]
  { {DK::INVALID, DK::U32, DK::U8},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1455], 3 },  // st.stk [693]
  { {DK::INVALID, DK::S32, DK::U8},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1458], 1 },  // st.stk [694]
  { {DK::INVALID, DK::S32, DK::U8},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1459], 2 },  // st.stk [695]
  { {DK::INVALID, DK::S32, DK::U8},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1461], 3 },  // st.stk [696]
  { {DK::INVALID, DK::U32, DK::S8},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1464], 1 },  // st.stk [697]
  { {DK::INVALID, DK::U32, DK::S8},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1465], 2 },  // st.stk [698]
  { {DK::INVALID, DK::U32, DK::S8},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1467], 3 },  // st.stk [699]
  { {DK::INVALID, DK::S32, DK::S8},
    {IC::invalid, IC::pos_stk_combo_12_bits, IC::invalid},
    &kInsTemplates[1470], 1 },  // st.stk [700]
  { {DK::INVALID, DK::S32, DK::S8},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1471], 2 },  // st.stk [701]
  { {DK::INVALID, DK::S32, DK::S8},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1473], 3 },  // st.stk [702]
  { {DK::INVALID, DK::U32, DK::F32},
    {IC::invalid, IC::pos_stk_combo_8_bits_times_4, IC::invalid},
    &kInsTemplates[1476], 1 },  // st.stk [703]
  { {DK::INVALID, DK::U32, DK::F32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1477], 3 },  // st.stk [704]
  { {DK::INVALID, DK::S32, DK::F32},
    {IC::invalid, IC::pos_stk_combo_8_bits_times_4, IC::invalid},
    &kInsTemplates[1480], 1 },  // st.stk [705]
  { {DK::INVALID, DK::S32, DK::F32},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1481], 3 },  // st.stk [706]
  { {DK::INVALID, DK::U32, DK::F64},
    {IC::invalid, IC::pos_stk_combo_8_bits_times_4, IC::invalid},
    &kInsTemplates[1484], 1 },  // st.stk [707]
  { {DK::INVALID, DK::U32, DK::F64},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1485], 3 },  // st.stk [708]
  { {DK::INVALID, DK::S32, DK::F64},
    {IC::invalid, IC::pos_stk_combo_8_bits_times_4, IC::invalid},
    &kInsTemplates[1488], 1 },  // st.stk [709]
  { {DK::INVALID, DK::S32, DK::F64},
    {IC::invalid, IC::invalid, IC::pos_stk_combo_16_bits},
    &kInsTemplates[1489], 3 },  // st.stk [710]
  { {DK::INVALID, DK::U32, DK::U16},
    {IC::invalid, IC::pos_stk_combo_8_bits, IC::invalid},
    &kInsTemplates[1492], 1 },  // st.stk [711]
  { {DK::INVALID, DK::U32, DK::U16},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1493], 2 },  // st.stk [712]
  { {DK::INVALID, DK::U32, DK::U16},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1495], 3 },  // st.stk [713]
  { {DK::INVALID, DK::S32, DK::U16},
    {IC::invalid, IC::pos_stk_combo_8_bits, IC::invalid},
    &kInsTemplates[1498], 1 },  // st.stk [714]
  { {DK::INVALID, DK::S32, DK::U16},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1499], 2 },  // st.stk [715]
  { {DK::INVALID, DK::S32, DK::U16},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1501], 3 },  // st.stk [716]
  { {DK::INVALID, DK::U32, DK::S16},
    {IC::invalid, IC::pos_stk_combo_8_bits, IC::invalid},
    &kInsTemplates[1504], 1 },  // st.stk [717]
  { {DK::INVALID, DK::U32, DK::S16},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1505], 2 },  // st.stk [718]
  { {DK::INVALID, DK::U32, DK::S16},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1507], 3 },  // st.stk [719]
  { {DK::INVALID, DK::S32, DK::S16},
    {IC::invalid, IC::pos_stk_combo_8_bits, IC::invalid},
    &kInsTemplates[1510], 1 },  // st.stk [720]
  { {DK::INVALID, DK::S32, DK::S16},
    {IC::invalid, IC::pos_stk_combo_16_bits, IC::invalid},
    &kInsTemplates[1511], 2 },  // st.stk [721]
  { {DK::INVALID, DK::S32, DK::S16},
    {IC::invalid, IC::any_32_bits, IC::invalid},
    &kInsTemplates[1513], 3 },  // st.stk [722]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1516], 8 },  // cas [723]
  { {DK::A32, DK::A32, DK::A32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1524], 8 },  // cas [724]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1532], 8 },  // cas [725]
  { {DK::C32, DK::C32, DK::C32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1540], 8 },  // cas [726]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1548], 8 },  // cas [727]
  { {DK::U32, DK::U32, DK::U32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1556], 8 },  // cas [728]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1564], 8 },  // cas [729]
  { {DK::S32, DK::S32, DK::S32, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1572], 8 },  // cas [730]
  { {DK::U16, DK::U16, DK::U16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1580], 10 },  // cas [731]
  { {DK::U16, DK::U16, DK::U16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1590], 10 },  // cas [732]
  { {DK::S16, DK::S16, DK::S16, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1600], 10 },  // cas [733]
  { {DK::S16, DK::S16, DK::S16, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1610], 10 },  // cas [734]
  { {DK::U8, DK::U8, DK::U8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1620], 10 },  // cas [735]
  { {DK::U8, DK::U8, DK::U8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1630], 10 },  // cas [736]
  { {DK::S8, DK::S8, DK::S8, DK::A32, DK::S32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1640], 10 },  // cas [737]
  { {DK::S8, DK::S8, DK::S8, DK::A32, DK::U32},
    {IC::invalid, IC::invalid, IC::invalid, IC::invalid, IC::zero},
    &kInsTemplates[1650], 10 },  // cas [738]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[1660], 1 },  // cntlz [739]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[1661], 1 },  // cntlz [740]
  { {DK::U32, DK::U32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[1662], 2 },  // cnttz [741]
  { {DK::S32, DK::S32},
    {IC::invalid, IC::invalid},
    &kInsTemplates[1664], 2 },  // cnttz [742]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1666], 2 },  // getfp [743]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1668], 2 },  // getfp [744]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1670], 2 },  // getfp [745]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1672], 2 },  // getfp [746]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1674], 2 },  // getfp [747]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1676], 2 },  // getfp [748]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1678], 2 },  // getfp [749]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1680], 2 },  // getfp [750]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1682], 1 },  // getsp [751]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1683], 1 },  // getsp [752]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1684], 1 },  // getsp [753]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1685], 1 },  // getsp [754]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1686], 1 },  // getsp [755]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1687], 1 },  // getsp [756]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1688], 1 },  // getsp [757]
  { {DK::A32},
    {IC::invalid},
    &kInsTemplates[1689], 1 },  // getsp [758]
};
}  // namespace

const char* const IMM_CURB_ToStringMap[] = {
    "invalid", // 0
    "pos_8_bits_shifted", // 1
    "neg_8_bits_shifted", // 2
    "not_8_bits_shifted", // 3
    "pos_5_bits", // 4
    "pos_12_bits", // 5
    "neg_12_bits", // 6
    "pos_8_bits", // 7
    "neg_8_bits", // 8
    "pos_8_bits_times_4", // 9
    "neg_8_bits_times_4", // 10
    "pos_16_bits", // 11
    "any_32_bits", // 12
    "pos_stk_combo_8_bits_shifted", // 13
    "pos_stk_combo_8_bits", // 14
    "pos_stk_combo_8_bits_times_4", // 15
    "pos_stk_combo_12_bits", // 16
    "pos_stk_combo_16_bits", // 17
    "zero", // 18
};
const char* EnumToString(IMM_CURB x) { return IMM_CURB_ToStringMap[unsigned(x)]; }


const char* const PARAM_ToStringMap[] = {
    "invalid", // 0
    "reg0", // 1
    "reg1", // 2
    "reg2", // 3
    "reg3", // 4
    "reg4", // 5
    "num0", // 6
    "num1", // 7
    "num2", // 8
    "num3", // 9
    "num4", // 10
    "num0_neg", // 11
    "num1_neg", // 12
    "num2_neg", // 13
    "num3_neg", // 14
    "num4_neg", // 15
    "num0_not", // 16
    "num1_not", // 17
    "num2_not", // 18
    "num1_lo16", // 19
    "num1_hi16", // 20
    "mem1_num2_lo16", // 21
    "mem1_num2_hi16", // 22
    "fun1_lo16", // 23
    "fun1_hi16", // 24
    "bbl0", // 25
    "bbl2", // 26
    "fun0", // 27
    "jtb1_lo16", // 28
    "jtb1_hi16", // 29
    "scratch_flt", // 30
    "scratch_gpr", // 31
    "ldm_regmask", // 32
    "stm_regmask", // 33
    "vldm_start", // 34
    "vldm_count", // 35
    "vstm_start", // 36
    "vstm_count", // 37
    "stk0_offset1", // 38
    "stk0_offset1_lo", // 39
    "stk0_offset1_hi", // 40
    "stk1_offset2", // 41
    "stk1_offset2_lo", // 42
    "stk1_offset2_hi", // 43
    "frame_size", // 44
};
const char* EnumToString(PARAM x) { return PARAM_ToStringMap[unsigned(x)]; }

/* @AUTOGEN-END@ */

const Pattern* FindMatchingPattern(Ins ins) {
  const uint64_t reg_matcher = ExtractTypeMaskForPattern(ins);
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (PatternMatchesTypeConstraints(pat, reg_matcher) &&
        0 == PatternMismatchesImmConstraints(pat, ins, false)) {
      return &pat;
    }
  }
  return nullptr;
}

uint8_t FindtImmediateMismatchesInBestMatchPattern(Ins ins,
                                                   bool assume_stk_op_matches) {
  uint8_t best = MATCH_IMPOSSIBLE;
  uint8_t best_num_bits = __builtin_popcount(best);
  const uint64_t type_matcher = ExtractTypeMaskForPattern(ins);
  // std::cout << "@type_matcher: " << std::hex << type_matcher << "\n";
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (!PatternMatchesTypeConstraints(pat, type_matcher)) continue;
    const uint8_t mismatches =
        PatternMismatchesImmConstraints(pat, ins, assume_stk_op_matches);
    if (mismatches == 0) return 0;
    const uint8_t num_bits = __builtin_popcount(mismatches);
    if (num_bits < best_num_bits) {
      best = mismatches;
      best_num_bits = num_bits;
    }
  }
  return best;
}

namespace {
int32_t ExtractReg(Reg reg) {
  ASSERT(reg.kind() == RefKind::REG, "not a reg " << EnumToString(reg.kind()));
  CpuReg cpu_reg(RegCpuReg(reg));
  ASSERT(cpu_reg.kind() == RefKind::CPU_REG, "no cpu reg");
  return CpuRegNo(cpu_reg);
}

int32_t ExtractNum(Const num) {
  ASSERT(num.kind() == RefKind::CONST,
         "not a const " << EnumToString(num.kind()));
  switch (DKFlavor(ConstKind(num))) {
    case DK_FLAVOR_U:
      return ConstValueU(num);
    case DK_FLAVOR_A:
    case DK_FLAVOR_C:
    case DK_FLAVOR_S:
      return ConstValueACS(num);
    default:
      ASSERT(false, "unreachable");
      return 0;
  }
}

int32_t ExtractNumNeg(Const num) { return -ExtractNum(num); }

int32_t ExtractNumNot(Const num) { return ~ExtractNum(num); }

int32_t GetStackOffset(Handle stk, Handle num) {
  ASSERT(stk.kind() == RefKind::STK, "");
  ASSERT(num.kind() == RefKind::CONST, "");
  return StkSlot(Stk(stk)) + ConstValueInt32(Const(num));
}

int32_t ExtractParamOp(Ins ins, PARAM param, const EmitContext& ctx) {
  switch (param) {
    case PARAM::reg0:
      return ExtractReg(Reg(InsOperand(ins, 0)));
    case PARAM::reg1:
      return ExtractReg(Reg(InsOperand(ins, 1)));
    case PARAM::reg2:
      return ExtractReg(Reg(InsOperand(ins, 2)));
    case PARAM::reg3:
      return ExtractReg(Reg(InsOperand(ins, 3)));
    case PARAM::reg4:
      return ExtractReg(Reg(InsOperand(ins, 4)));
    case PARAM::num0:
      return ExtractNum(Const(InsOperand(ins, 0)));
    case PARAM::num1:
      return ExtractNum(Const(InsOperand(ins, 1)));
    case PARAM::num2:
      return ExtractNum(Const(InsOperand(ins, 2)));
    case PARAM::num3:
      return ExtractNum(Const(InsOperand(ins, 3)));
    case PARAM::num4:
      return ExtractNum(Const(InsOperand(ins, 4)));
    case PARAM::num0_not:
      return ExtractNumNot(Const(InsOperand(ins, 0)));
    case PARAM::num1_not:
      return ExtractNumNot(Const(InsOperand(ins, 1)));
    case PARAM::num2_not:
      return ExtractNumNot(Const(InsOperand(ins, 2)));
    case PARAM::num0_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 0)));
    case PARAM::num1_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 1)));
    case PARAM::num2_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 2)));
    case PARAM::num3_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 3)));
    case PARAM::num4_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 4)));
    case PARAM::num1_lo16:
      return ExtractNum(Const(InsOperand(ins, 1))) & 0xffffU;
    case PARAM::num1_hi16:
      return (ExtractNum(Const(InsOperand(ins, 1))) >> 16U) & 0xffffU;
    case PARAM::stk0_offset1:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1));
    case PARAM::stk0_offset1_lo:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) & 0xffffU;

    case PARAM::stk0_offset1_hi:
      return (GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) >> 16U) &
             0xffffU;
    case PARAM::stk1_offset2:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2));

    case PARAM::stk1_offset2_lo:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) & 0xffffU;

    case PARAM::stk1_offset2_hi:
      return (GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) >> 16U) &
             0xffffU;
    case PARAM::scratch_gpr:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::GPR,
             "expected gpr reg");
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::scratch_flt:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::DBL ||
                 CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::FLT,
             "expected not gpr reg");
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::frame_size:
      return ctx.FrameSize();
    case PARAM::ldm_regmask:
    case PARAM::stm_regmask:
    case PARAM::vldm_start:
    case PARAM::vldm_count:
    case PARAM::vstm_start:
    case PARAM::vstm_count:
      // handled directly by EmitFunEpilog/EmitFunProlog
      return 0;
    case PARAM::invalid:
      ASSERT(false, "unreachable");
      return 0;
    case PARAM::bbl0:
    case PARAM::bbl2:
    case PARAM::fun0:
    case PARAM::mem1_num2_lo16:
    case PARAM::mem1_num2_hi16:
    case PARAM::fun1_lo16:
    case PARAM::fun1_hi16:
    case PARAM::jtb1_lo16:
    case PARAM::jtb1_hi16:
      // relocs
      return 0;
  }
  ASSERT(false, "unreachable");
  return 0;
}

void MaybeHandleReloc(a32::Ins* cpuins, unsigned pos, Ins ins, PARAM op) {
  Str symbol;
  auto handle_addend = [&](Const num) {
    cpuins->operands[pos] = ConstValueInt32(num);
  };
  switch (op) {
    case PARAM::bbl0:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::JUMP24;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 0)));
      break;
    case PARAM::bbl2:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::JUMP24;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 2)));
      break;
    case PARAM::fun0:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::CALL;
      symbol = Name(Fun(InsOperand(ins, 0)));
      break;
    case PARAM::mem1_num2_lo16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVW_ABS_NC;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::mem1_num2_hi16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVT_ABS;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::fun1_lo16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVW_ABS_NC;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::fun1_hi16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVT_ABS;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_lo16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVW_ABS_NC;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_hi16:
      cpuins->reloc_kind = elf::RELOC_TYPE_ARM::MOVT_ABS;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    default:
      return;
  }
  cpuins->reloc_pos = pos;
  cpuins->reloc_symbol = StrData(symbol);
}

}  // namespace

// number of args == MAX_OPERANDS
a32::Ins MakeIns(a32::OPC opc_enum,
                 uint32_t x0,
                 uint32_t x1,
                 uint32_t x2,
                 uint32_t x3,
                 uint32_t x4,
                 uint32_t x5) {
  const a32::Opcode* opc = &a32::OpcodeTable[+opc_enum];
  // TODO: reverse EncodeOperand params
  if (opc->num_fields > 0) x0 = a32::EncodeOperand(x0, opc->fields[0]);
  if (opc->num_fields > 1) x1 = a32::EncodeOperand(x1, opc->fields[1]);
  if (opc->num_fields > 2) x2 = a32::EncodeOperand(x2, opc->fields[2]);
  if (opc->num_fields > 3) x3 = a32::EncodeOperand(x3, opc->fields[3]);
  if (opc->num_fields > 4) x4 = a32::EncodeOperand(x4, opc->fields[4]);
  if (opc->num_fields > 5) x5 = a32::EncodeOperand(x5, opc->fields[5]);
  return a32::Ins{opc, {x0, x1, x2, x3, x4, x5}};
}
a32::Ins MakeInsFromTmpl(const InsTmpl& tmpl, Ins ins, const EmitContext& ctx) {
  a32::Ins out;
  out.opcode = &a32::OpcodeTable[unsigned(tmpl.opcode)];
  for (unsigned o = 0; o < a32::MAX_OPERANDS; ++o) {
    if ((tmpl.template_mask & (1U << o)) == 0) {
      // fixed operand - we uses these verbatim
      out.operands[o] = tmpl.operands[o];
    } else {
      // parameters require extra processing
      auto param = PARAM(tmpl.operands[o]);
      out.operands[o] = a32::EncodeOperand(ExtractParamOp(ins, param, ctx),
                                           out.opcode->fields[o]);
      // Note: this may overwrite    out.operands[o]
      MaybeHandleReloc(&out, o, ins, param);
    }
  }
  return out;
}

}  // namespace cwerg::code_gen_a32
