// NOTE: this file is PARTIALLY autogenerated via: ./isel_tab.py gen_c
// (c) Robert Muth - see LICENSE for more info

#include "CodeGenA64/isel_gen.h"
#include "Base/opcode_gen.h"

#include <cstdint>

namespace cwerg::code_gen_a64 {
namespace {
using namespace cwerg;
using namespace cwerg::base;

// +-prefix converts an enum the underlying integer type
template <typename T>
constexpr auto operator+(T e) noexcept
    -> std::enable_if_t<std::is_enum<T>::value, std::underlying_type_t<T>> {
  return static_cast<std::underlying_type_t<T>>(e);
}

using IC = IMM_CURB;

bool ImmStackFits(int64_t x,
                  bool assume_stk_op_matches,
                  unsigned bits,
                  unsigned scale_log) {
  if (assume_stk_op_matches) return true;
  if (x < 0) return false;
  if (x >= 1U << (bits + scale_log)) return false;
  return (x & ((1U << scale_log) - 1)) == 0;
}

bool ImmFitsCurb(IMM_CURB curb,
                 Const num,
                 int32_t last_stack_offset,
                 bool assume_stk_op_matches) {
  if (DKFlavor(ConstKind(num)) == DK_FLAVOR_F) {
    switch (curb) {
      case IC::ZERO:
        return ConstIsZero(num);
      default:
        ASSERT(false, "unexpected IMM_CURB " << EnumToString(curb));
        return false;
    }
  }
  int64_t x = ConstValueInt64(num);
  switch (curb) {
    case IC::INVALID:
      ASSERT(false, "unexpected IMM_CURB " << EnumToString(curb));
      return false;
    case IC::ZERO:
      return x == 0;
    case IC::ANY:
      return true;
    case IC::pos_stk_combo_16_bits:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 16, 0);
    case IC::pos_stk_combo_32_bits:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 32, 0);
    case IC::pos_stk_combo_10_21:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 0);
    case IC::pos_stk_combo_10_21_times_2:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 1);
    case IC::pos_stk_combo_10_21_times_4:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 2);
    case IC::pos_stk_combo_10_21_times_8:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 3);
    case IC::pos_stk_combo_shifted_10_21_22:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fall through
    case IC::IMM_SHIFTED_10_21_22:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_10_21_22, x) !=
             a64::kEncodeFailure;
    case IC::IMM_10_15_16_22_W:
      return a64::Encode_10_15_16_22_W(x) != a64::kEncodeFailure;
    case IC::IMM_10_15_16_22_X:
      return a64::Encode_10_15_16_22_X(x) != a64::kEncodeFailure;
    case IC::IMM_SHIFTED_5_20_21_22:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_5_20_21_22, x) !=
             a64::kEncodeFailure;
    case IC::IMM_SHIFTED_5_20_21_22_NOT:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_5_20_21_22, ~x) !=
             a64::kEncodeFailure;
    case IC::IMM_POS_32:
      return 0 <= x && x < (1ULL << 32ULL);
  }
  ASSERT(false, "unexpected IMM_CURB " << EnumToString(curb));
  return false;
}

uint64_t ExtractTypeMaskForPattern(Ins ins) {
  uint64_t reg_matcher = 0;
  unsigned num_ops = InsOpcode(ins).num_operands;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Handle h = InsOperand(ins, i);
    if (h.kind() == RefKind::REG) {
      reg_matcher |= uint64_t(RegKind(Reg(h))) << 8 * i;
    } else if (h.kind() == RefKind::CONST) {
      reg_matcher |= uint64_t(ConstKind(Const(h))) << 8 * i;
    }
  }
  return reg_matcher;
}

bool PatternMatchesTypeCurbs(const Pattern& pat, uint64_t type_mask) {
  return type_mask == pat.type_curbs_as_int;
}

uint8_t PatternMismatchesImmCurbs(const Pattern& pat,
                                  Ins ins,
                                  bool assume_stk_op_matches) {
  unsigned num_ops = InsOpcode(ins).num_operands;
  uint8_t out = 0;
  // Should this be int64_t?
  int32_t last_stack_offset = 0;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Const op(InsOperand(ins, i));
    const IC imm_curb = pat.imm_curbs[i];
    if (op.kind() == RefKind::STK) {
      if (assume_stk_op_matches) {
        last_stack_offset = 0;
      } else {
        last_stack_offset = StkSlot(Stk(op));
      }
    } else if (op.kind() == RefKind::REG) {
      if (imm_curb != IC::INVALID)
        return MATCH_IMPOSSIBLE;  // we have a reg but need an imm
    } else if (op.kind() == RefKind::CONST) {
      if (imm_curb == IC::INVALID) {
        // we have an imm but need a reg - this can be accommodated.
        out |= 1U << i;
      } else if (!ImmFitsCurb(imm_curb, Const(op), last_stack_offset,
                              assume_stk_op_matches)) {
        // imm does not not fit
        return MATCH_IMPOSSIBLE;
      }
    }
  }
  return out;
}

/* @AUTOGEN-START@ */

enum class FIXARG : uint8_t {
    WZR = 31,
    X8 = 8,
    LR = 30,
    UXTW = 0,
    SXTW = 1,
};

enum class SHIFT : uint8_t {
    lsl = 0,
    lsr = 1,
    asr = 2,
    ror = 3,
};

const InsTmpl kInsTemplates[] = {
  { /*used first entry*/ },
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_w_reg, 0x7 },  // add [2]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_w_imm, 0x7 },  // add [3]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_w_reg, 0x7 },  // add [4]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_w_imm, 0x7 },  // add [5]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // add [6]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // add [7]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // add [8]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // add [9]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fadd_s, 0x7 },  // add [10]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fadd_d, 0x7 },  // add [11]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x7 },  // sub [12]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_w_imm, 0x7 },  // sub [13]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x5 },  // sub [14]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x7 },  // sub [15]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_w_imm, 0x7 },  // sub [16]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x5 },  // sub [17]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x7 },  // sub [18]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_x_imm, 0x7 },  // sub [19]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x5 },  // sub [20]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x7 },  // sub [21]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_x_imm, 0x7 },  // sub [22]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x5 },  // sub [23]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fsub_s, 0x7 },  // sub [24]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fsub_d, 0x7 },  // sub [25]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_w, 0x7 },  // mul [26]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_w, 0x7 },  // mul [27]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_x, 0x7 },  // mul [28]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_x, 0x7 },  // mul [29]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fmul_s, 0x7 },  // mul [30]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fmul_d, 0x7 },  // mul [31]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::udiv_w, 0x7 },  // div [32]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::sdiv_w, 0x7 },  // div [33]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::udiv_x, 0x7 },  // div [34]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::sdiv_x, 0x7 },  // div [35]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fdiv_s, 0x7 },  // div [36]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fdiv_d, 0x7 },  // div [37]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_w_reg, 0x7 },  // xor [38]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_w_imm, 0x7 },  // xor [39]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_w_reg, 0x7 },  // xor [40]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_w_imm, 0x7 },  // xor [41]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // xor [42]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_x_imm, 0x7 },  // xor [43]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // xor [44]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_x_imm, 0x7 },  // xor [45]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_w_reg, 0x7 },  // and [46]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_w_imm, 0x7 },  // and [47]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_w_reg, 0x7 },  // and [48]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_w_imm, 0x7 },  // and [49]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_x_reg, 0x7 },  // and [50]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_x_imm, 0x7 },  // and [51]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_x_reg, 0x7 },  // and [52]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_x_imm, 0x7 },  // and [53]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x7 },  // or [54]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_w_imm, 0x7 },  // or [55]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x7 },  // or [56]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_w_imm, 0x7 },  // or [57]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x7 },  // or [58]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_x_imm, 0x7 },  // or [59]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x7 },  // or [60]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_x_imm, 0x7 },  // or [61]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_w, 0x7 },  // shl [62]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_w, 0x7 },  // shl [63]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_x, 0x7 },  // shl [64]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_x, 0x7 },  // shl [65]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_w, 0xf },  // shl [66]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_w, 0xf },  // shl [67]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_x, 0xf },  // shl [68]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_x, 0xf },  // shl [69]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lsrv_w, 0x7 },  // shr [70]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::asrv_w, 0x7 },  // shr [71]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lsrv_x, 0x7 },  // shr [72]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::asrv_x, 0x7 },  // shr [73]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 31},
    a64::OPC::ubfm_w, 0x7 },  // shr [74]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 31},
    a64::OPC::sbfm_w, 0x7 },  // shr [75]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 63},
    a64::OPC::ubfm_x, 0x7 },  // shr [76]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 63},
    a64::OPC::sbfm_x, 0x7 },  // shr [77]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // beq [78]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [79]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // beq [80]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [81]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // beq [82]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [83]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // beq [84]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [85]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [86]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [87]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [88]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [89]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [90]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [91]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [92]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [93]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [94]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [95]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [96]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [97]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [98]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [99]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [100]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [101]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // beq [102]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [103]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_s_zero, 0x1 },  // beq [104]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [105]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // beq [106]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [107]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_d_zero, 0x1 },  // beq [108]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [109]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // bne [110]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [111]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // bne [112]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [113]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // bne [114]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [115]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // bne [116]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [117]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [118]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [119]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [120]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [121]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [122]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [123]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [124]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [125]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [126]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [127]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [128]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [129]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [130]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [131]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [132]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [133]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // bne [134]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [135]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_s_zero, 0x1 },  // bne [136]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [137]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // bne [138]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [139]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_d_zero, 0x1 },  // bne [140]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [141]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // blt [142]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [143]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // blt [144]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [145]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // blt [146]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [147]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // blt [148]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [149]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // blt [150]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [151]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // blt [152]
  { {+PARAM::bbl2},
    a64::OPC::b_gt, 0x1 },  // blt [153]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [154]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [155]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [156]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [157]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [158]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [159]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [160]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [161]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [162]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [163]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [164]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [165]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [166]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [167]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [168]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [169]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [170]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [171]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [172]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [173]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [174]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [175]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [176]
  { {+PARAM::bbl2},
    a64::OPC::b_gt, 0x1 },  // blt [177]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // blt [178]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [179]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_s_zero, 0x1 },  // blt [180]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [181]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // blt [182]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [183]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_d_zero, 0x1 },  // blt [184]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [185]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // ble [186]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [187]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // ble [188]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [189]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // ble [190]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [191]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // ble [192]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [193]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // ble [194]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [195]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // ble [196]
  { {+PARAM::bbl2},
    a64::OPC::b_ge, 0x1 },  // ble [197]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [198]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [199]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [200]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [201]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [202]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [203]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [204]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [205]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [206]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [207]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [208]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [209]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [210]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [211]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [212]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [213]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [214]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [215]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [216]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [217]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [218]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [219]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [220]
  { {+PARAM::bbl2},
    a64::OPC::b_ge, 0x1 },  // ble [221]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // ble [222]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [223]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_s_zero, 0x1 },  // ble [224]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [225]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // ble [226]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [227]
  { {+PARAM::reg0, 0},
    a64::OPC::fcmpe_d_zero, 0x1 },  // ble [228]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [229]
  { {+PARAM::scratch_gpr, +PARAM::jtb1_prel_hi21},
    a64::OPC::adrp, 0x3 },  // switch [230]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::jtb1_lo12},
    a64::OPC::add_x_imm, 0x7 },  // switch [231]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg0, +FIXARG::UXTW, 3},
    a64::OPC::ldr_x_reg_w, 0x7 },  // switch [232]
  { {+PARAM::scratch_gpr},
    a64::OPC::br, 0x1 },  // switch [233]
  { {+PARAM::bbl0},
    a64::OPC::b, 0x1 },  // bra [234]
  { {+PARAM::fun0},
    a64::OPC::bl, 0x1 },  // bsr [235]
  { {+PARAM::reg0},
    a64::OPC::blr, 0x1 },  // jsr [236]
  { {+FIXARG::X8, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x2 },  // syscall [237]
  { {0},
    a64::OPC::svc, 0x0 },  // syscall [238]
  { {0},
    a64::OPC::brk, 0x0 },  // trap [239]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [240]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [241]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [242]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [243]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [244]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [245]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [246]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [247]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [248]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [249]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [250]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [251]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [252]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [253]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [254]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [255]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [256]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [257]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [258]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [259]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [260]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [261]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [262]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [263]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [264]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [265]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [266]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [267]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [268]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [269]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [270]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [271]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [272]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [273]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [274]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [275]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [276]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [277]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [278]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [279]
  { {+PARAM::reg0, +PARAM::reg1, 0, 31},
    a64::OPC::sbfm_x, 0x3 },  // conv [280]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [281]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [282]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [283]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [284]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [285]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [286]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [287]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [288]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [289]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [290]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [291]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [292]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [293]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [294]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [295]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [296]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x5 },  // conv [297]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x5 },  // conv [298]
  { {+PARAM::reg0, +PARAM::reg1, 0, 31},
    a64::OPC::sbfm_x, 0x3 },  // conv [299]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvt_d_s, 0x3 },  // conv [300]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvt_s_d, 0x3 },  // conv [301]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_d_from_w, 0x3 },  // conv [302]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_d_from_w, 0x3 },  // conv [303]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_s_from_w, 0x3 },  // conv [304]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_s_from_w, 0x3 },  // conv [305]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_d_from_x, 0x3 },  // conv [306]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_d_from_x, 0x3 },  // conv [307]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_s_from_x, 0x3 },  // conv [308]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_s_from_x, 0x3 },  // conv [309]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_w_s, 0x3 },  // conv [310]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_w_d, 0x3 },  // conv [311]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_w_s, 0x3 },  // conv [312]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_w_d, 0x3 },  // conv [313]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_x_s, 0x3 },  // conv [314]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_x_d, 0x3 },  // conv [315]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_x_s, 0x3 },  // conv [316]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_x_d, 0x3 },  // conv [317]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [318]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [319]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [320]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [321]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [322]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [323]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [324]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [325]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [326]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [327]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [328]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [329]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [330]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [331]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [332]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [333]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [334]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [335]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [336]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [337]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_d_from_x, 0x3 },  // bitcast [338]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_d_from_x, 0x3 },  // bitcast [339]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_s_from_w, 0x3 },  // bitcast [340]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_s_from_w, 0x3 },  // bitcast [341]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_x_from_d, 0x3 },  // bitcast [342]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_x_from_d, 0x3 },  // bitcast [343]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_w_from_s, 0x3 },  // bitcast [344]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_w_from_s, 0x3 },  // bitcast [345]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [346]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [347]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [348]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [349]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [350]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [351]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [352]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [353]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [354]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [355]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [356]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [357]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [358]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [359]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [360]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [361]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [362]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [363]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [364]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [365]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [366]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [367]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [368]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [369]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [370]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [371]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [372]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [373]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [374]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [375]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [376]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [377]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [378]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [379]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [380]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [381]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [382]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [383]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [384]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [385]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [386]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [387]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [388]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [389]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [390]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [391]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [392]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [393]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [394]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [395]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [396]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [397]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [398]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [399]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [400]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [401]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [402]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [403]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [404]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [405]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [406]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [407]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [408]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [409]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [410]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [411]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [412]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [413]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [414]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [415]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [416]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [417]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [418]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [419]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [420]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [421]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [422]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [423]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [424]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [425]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [426]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [427]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [428]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [429]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [430]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [431]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [432]
  { {+PARAM::reg0, +PARAM::num1_16_32, 16},
    a64::OPC::movk_x_imm, 0x3 },  // mov [433]
  { {+PARAM::reg0, +PARAM::num1_32_48, 32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [434]
  { {+PARAM::reg0, +PARAM::num1_48_64, 48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [435]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_s_reg, 0x3 },  // mov [436]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_d_reg, 0x3 },  // mov [437]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [438]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [439]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [440]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [441]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [442]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [443]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [444]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [445]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [446]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [447]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [448]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [449]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [450]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [451]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [452]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [453]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [454]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [455]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [456]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [457]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [458]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [459]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [460]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [461]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [462]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [463]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [464]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [465]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [466]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [467]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [468]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [469]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [470]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [471]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [472]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [473]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [474]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [475]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [476]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [477]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [478]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [479]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [480]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [481]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [482]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [483]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [484]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [485]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [486]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [487]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [488]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [489]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [490]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [491]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [492]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [493]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [494]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [495]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [496]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [497]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [498]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [499]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [500]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [501]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [502]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [503]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [504]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [505]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [506]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [507]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [508]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [509]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [510]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [511]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [512]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [513]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [514]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [515]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [516]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [517]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [518]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [519]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [520]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [521]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [522]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [523]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [524]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [525]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [526]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [527]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [528]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [529]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [530]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [531]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [532]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [533]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [534]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [535]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [536]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [537]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [538]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [539]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [540]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [541]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [542]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [543]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [544]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [545]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [546]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [547]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [548]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [549]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [550]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [551]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [552]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [553]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [554]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [555]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [556]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [557]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [558]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [559]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [560]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [561]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [562]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [563]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [564]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [565]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [566]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [567]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [568]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [569]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [570]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [571]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [572]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [573]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [574]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [575]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [576]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [577]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [578]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [579]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [580]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [581]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [582]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [583]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [584]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [585]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [586]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [587]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [588]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [589]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [590]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [591]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [592]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [593]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [594]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [595]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [596]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [597]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [598]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [599]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [600]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [601]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [602]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [603]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [604]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [605]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [606]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [607]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [608]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [609]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [610]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [611]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [612]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [613]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [614]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [615]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [616]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [617]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [618]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [619]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [620]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [621]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [622]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [623]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [624]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [625]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [626]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [627]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [628]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [629]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [630]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [631]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [632]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [633]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [634]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [635]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [636]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [637]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [638]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [639]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [640]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [641]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [642]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [643]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [644]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [645]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [646]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [647]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [648]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [649]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [650]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [651]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [652]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [653]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [654]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [655]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [656]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [657]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [658]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [659]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [660]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [661]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [662]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [663]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [664]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [665]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [666]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [667]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [668]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [669]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [670]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [671]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [672]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [673]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [674]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [675]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [676]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [677]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [678]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [679]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [680]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [681]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [682]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [683]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [684]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [685]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [686]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [687]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [688]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [689]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [690]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [691]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [692]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [693]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [694]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [695]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [696]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [697]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [698]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [699]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [700]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [701]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [702]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [703]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [704]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [705]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [706]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [707]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [708]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [709]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [710]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [711]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [712]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [713]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [714]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [715]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [716]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [717]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [718]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [719]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [720]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [721]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [722]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [723]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [724]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [725]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [726]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_d_eq, 0x7 },  // cmpeq [727]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [728]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_d_eq, 0x7 },  // cmpeq [729]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [730]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_s_eq, 0x7 },  // cmpeq [731]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [732]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_s_eq, 0x7 },  // cmpeq [733]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [734]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [735]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [736]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [737]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [738]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [739]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [740]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [741]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [742]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [743]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [744]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [745]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [746]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [747]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [748]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [749]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [750]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [751]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [752]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [753]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [754]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [755]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [756]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [757]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [758]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [759]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [760]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [761]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [762]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [763]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [764]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [765]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [766]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [767]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [768]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [769]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [770]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [771]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [772]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [773]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [774]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [775]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [776]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [777]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [778]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [779]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [780]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [781]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [782]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [783]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [784]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [785]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [786]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [787]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [788]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [789]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [790]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [791]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [792]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [793]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [794]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [795]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [796]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [797]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [798]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [799]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [800]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [801]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [802]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [803]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [804]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [805]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [806]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [807]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [808]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [809]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [810]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [811]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [812]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [813]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [814]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [815]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [816]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [817]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [818]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_d_mi, 0x7 },  // cmplt [819]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [820]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_d_mi, 0x7 },  // cmplt [821]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [822]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_s_mi, 0x7 },  // cmplt [823]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [824]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fcsel_s_mi, 0x7 },  // cmplt [825]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // lea [826]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // lea [827]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, 0},
    a64::OPC::add_x_reg_uxtw, 0x7 },  // lea [828]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, 0},
    a64::OPC::add_x_reg_sxtw, 0x7 },  // lea [829]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // lea [830]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // lea [831]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // lea [832]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // lea [833]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [834]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [835]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [836]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [837]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [838]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [839]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [840]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [841]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [842]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [843]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [844]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [845]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi, 16},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [846]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [847]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [848]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [849]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [850]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [851]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi, 16},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [852]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [853]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [854]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [855]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [856]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [857]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi, 16},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [858]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [859]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [860]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [861]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [862]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [863]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi, 16},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [864]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // lea.stk [865]
  { {+PARAM::reg0, +PARAM::fun1_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.fun [866]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::fun1_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.fun [867]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [868]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [869]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [870]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [871]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [872]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [873]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [874]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [875]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [876]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [877]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [878]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [879]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [880]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [881]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [882]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [883]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [884]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [885]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [886]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [887]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [888]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [889]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [890]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [891]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [892]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [893]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [894]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [895]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [896]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [897]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [898]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_x_imm, 0x7 },  // ld [899]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_w_reg_x, 0x7 },  // ld [900]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_w_reg_x, 0x7 },  // ld [901]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_w_reg_w, 0x7 },  // ld [902]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_w_reg_w, 0x7 },  // ld [903]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_w_imm, 0x7 },  // ld [904]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_w_imm, 0x7 },  // ld [905]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_w_imm, 0x7 },  // ld [906]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_w_imm, 0x7 },  // ld [907]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsw_reg_x, 0x7 },  // ld [908]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsw_reg_x, 0x7 },  // ld [909]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsw_reg_w, 0x7 },  // ld [910]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsw_reg_w, 0x7 },  // ld [911]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsw_imm, 0x7 },  // ld [912]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsw_imm, 0x7 },  // ld [913]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsw_imm, 0x7 },  // ld [914]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsw_imm, 0x7 },  // ld [915]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_h_reg_x, 0x7 },  // ld [916]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_h_reg_x, 0x7 },  // ld [917]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_h_reg_w, 0x7 },  // ld [918]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_h_reg_w, 0x7 },  // ld [919]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_h_imm, 0x7 },  // ld [920]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_h_imm, 0x7 },  // ld [921]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_h_imm, 0x7 },  // ld [922]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_h_imm, 0x7 },  // ld [923]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsh_x_reg_x, 0x7 },  // ld [924]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsh_x_reg_x, 0x7 },  // ld [925]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsh_x_reg_w, 0x7 },  // ld [926]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsh_x_reg_w, 0x7 },  // ld [927]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsh_x_imm, 0x7 },  // ld [928]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsh_x_imm, 0x7 },  // ld [929]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsh_x_imm, 0x7 },  // ld [930]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsh_x_imm, 0x7 },  // ld [931]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_b_reg_x, 0x7 },  // ld [932]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_b_reg_x, 0x7 },  // ld [933]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_b_reg_w, 0x7 },  // ld [934]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_b_reg_w, 0x7 },  // ld [935]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_b_imm, 0x7 },  // ld [936]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_b_imm, 0x7 },  // ld [937]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_b_imm, 0x7 },  // ld [938]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldr_b_imm, 0x7 },  // ld [939]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsb_x_reg_x, 0x7 },  // ld [940]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsb_x_reg_x, 0x7 },  // ld [941]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsb_x_reg_w, 0x7 },  // ld [942]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsb_x_reg_w, 0x7 },  // ld [943]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsb_x_imm, 0x7 },  // ld [944]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsb_x_imm, 0x7 },  // ld [945]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsb_x_imm, 0x7 },  // ld [946]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::ldrsb_x_imm, 0x7 },  // ld [947]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_s_reg_x, 0x7 },  // ld [948]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_s_reg_x, 0x7 },  // ld [949]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::fldr_s_reg_w, 0x7 },  // ld [950]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::fldr_s_reg_w, 0x7 },  // ld [951]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_s_imm, 0x7 },  // ld [952]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_s_imm, 0x7 },  // ld [953]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_s_imm, 0x7 },  // ld [954]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_s_imm, 0x7 },  // ld [955]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_d_reg_x, 0x7 },  // ld [956]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_d_reg_x, 0x7 },  // ld [957]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::fldr_d_reg_w, 0x7 },  // ld [958]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::fldr_d_reg_w, 0x7 },  // ld [959]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_d_imm, 0x7 },  // ld [960]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_d_imm, 0x7 },  // ld [961]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_d_imm, 0x7 },  // ld [962]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::fldr_d_imm, 0x7 },  // ld [963]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [964]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [965]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [966]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [967]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [968]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [969]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [970]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [971]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [972]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [973]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [974]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [975]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [976]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [977]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [978]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [979]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [980]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [981]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [982]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [983]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [984]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [985]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [986]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [987]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [988]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [989]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [990]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [991]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [992]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [993]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [994]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [995]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [996]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [997]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [998]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [999]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [1000]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [1001]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [1002]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [1003]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [1004]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [1005]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [1006]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [1007]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [1008]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [1009]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [1010]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [1011]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1012]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1013]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1014]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1015]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1016]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1017]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1018]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1019]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1020]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1021]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1022]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1023]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1024]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [1025]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1026]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [1027]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [1028]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [1029]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [1030]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [1031]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [1032]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [1033]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [1034]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [1035]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [1036]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [1037]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [1038]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [1039]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [1040]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [1041]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [1042]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [1043]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [1044]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [1045]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [1046]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [1047]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [1048]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [1049]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [1050]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [1051]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::fstr_d_reg_x, 0x13 },  // st [1052]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::fstr_d_reg_x, 0x13 },  // st [1053]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::fstr_d_reg_w, 0x13 },  // st [1054]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::fstr_d_reg_w, 0x13 },  // st [1055]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::fstr_s_reg_x, 0x13 },  // st [1056]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::fstr_s_reg_x, 0x13 },  // st [1057]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::fstr_s_reg_w, 0x13 },  // st [1058]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::fstr_s_reg_w, 0x13 },  // st [1059]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1060]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1061]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1062]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1063]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1064]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1065]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1066]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1067]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1068]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1069]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1070]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1071]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1072]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1073]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1074]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [1075]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1076]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1077]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1078]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1079]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1080]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1081]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1082]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [1083]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1084]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1085]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1086]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1087]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1088]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1089]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1090]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [1091]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1092]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1093]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1094]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1095]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1096]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1097]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1098]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [1099]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [1100]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [1101]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [1102]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [1103]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [1104]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [1105]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [1106]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [1107]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1108]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1109]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1110]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1111]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1112]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1113]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1114]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1115]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1116]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1117]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1118]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1119]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1120]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1121]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1122]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1123]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1124]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1125]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1126]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1127]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1128]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1129]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1130]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1131]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1132]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1133]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1134]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1135]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1136]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1137]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1138]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1139]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1140]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1141]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1142]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1143]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1144]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1145]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1146]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1147]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1148]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1149]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1150]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1151]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1152]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1153]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1154]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1155]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1156]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1157]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1158]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1159]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1160]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1161]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1162]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1163]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1164]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1165]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1166]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1167]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1168]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1169]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1170]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1171]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1172]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1173]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1174]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1175]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1176]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1177]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1178]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1179]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1180]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1181]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1182]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1183]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1184]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1185]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1186]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1187]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1188]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1189]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1190]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1191]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1192]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1193]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1194]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1195]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1196]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1197]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1198]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1199]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1200]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1201]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1202]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1203]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1204]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1205]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1206]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1207]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1208]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1209]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1210]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1211]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1212]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1213]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1214]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1215]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1216]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1217]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1218]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1219]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1220]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1221]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1222]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1223]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1224]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1225]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1226]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1227]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1228]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1229]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1230]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1231]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1232]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1233]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1234]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1235]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1236]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1237]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1238]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1239]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1240]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1241]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1242]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1243]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1244]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1245]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1246]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1247]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1248]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1249]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1250]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1251]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1252]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1253]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1254]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1255]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1256]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1257]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_x, 0x3 },  // cas [1258]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1259]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_x_imm, 0x3 },  // cas [1260]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1261]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_x_imm, 0x3 },  // cas [1262]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1263]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_x, 0x7 },  // cas [1264]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1265]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1266]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1267]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1268]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1269]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1270]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1271]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1272]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1273]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1274]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1275]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1276]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1277]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1278]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1279]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1280]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1281]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1282]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1283]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1284]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1285]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1286]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1287]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1288]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1289]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1290]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1291]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1292]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1293]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1294]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1295]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1296]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1297]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1298]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1299]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1300]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1301]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1302]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1303]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1304]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1305]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1306]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1307]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1308]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1309]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1310]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1311]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1312]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1313]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1314]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1315]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1316]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1317]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1318]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1319]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1320]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1321]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1322]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1323]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1324]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1325]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1326]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1327]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1328]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1329]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1330]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1331]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1332]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1333]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1334]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1335]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1336]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1337]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_w, 0x3 },  // cas [1338]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1339]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::adds_w_imm, 0x3 },  // cas [1340]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1341]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 0},
    a64::OPC::add_w_imm, 0x3 },  // cas [1342]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1343]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_w, 0x7 },  // cas [1344]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1345]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1346]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1347]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1348]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1349]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1350]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1351]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1352]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1353]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1354]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1355]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1356]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1357]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1358]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1359]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1360]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1361]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1362]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1363]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1364]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1365]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1366]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1367]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1368]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1369]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1370]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1371]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1372]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1373]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1374]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1375]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1376]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1377]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1378]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1379]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1380]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1381]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1382]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1383]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1384]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1385]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1386]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1387]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1388]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1389]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1390]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1391]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1392]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1393]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1394]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1395]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1396]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1397]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1398]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1399]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1400]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1401]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1402]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1403]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1404]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1405]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1406]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1407]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1408]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1409]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1410]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1411]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1412]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1413]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1414]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1415]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1416]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1417]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_h, 0x3 },  // cas [1418]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1419]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1420]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1421]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 65535},
    a64::OPC::and_x_imm, 0x3 },  // cas [1422]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1423]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_h, 0x7 },  // cas [1424]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1425]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1426]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1427]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1428]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1429]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1430]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1431]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1432]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1433]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1434]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1435]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1436]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1437]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1438]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1439]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1440]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1441]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1442]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1443]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1444]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1445]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1446]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1447]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1448]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1449]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1450]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1451]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1452]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1453]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1454]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1455]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1456]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1457]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1458]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1459]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1460]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1461]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1462]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1463]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1464]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1465]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1466]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1467]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1468]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1469]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1470]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1471]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1472]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1473]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1474]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1475]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1476]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1477]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1478]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1479]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1480]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1481]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1482]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1483]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1484]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1485]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1486]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1487]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1488]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1489]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1490]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1491]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1492]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1493]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1494]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1495]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1496]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1497]
  { {+PARAM::scratch_gpr, +PARAM::reg3},
    a64::OPC::ldaxr_b, 0x3 },  // cas [1498]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1499]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::ands_x_imm, 0x3 },  // cas [1500]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // cas [1501]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, 255},
    a64::OPC::and_x_imm, 0x3 },  // cas [1502]
  { {4},
    a64::OPC::b_ne, 0x0 },  // cas [1503]
  { {+PARAM::scratch_gpr, +PARAM::reg3, +PARAM::reg2},
    a64::OPC::stlxr_b, 0x7 },  // cas [1504]
  { {+PARAM::scratch_gpr, -7},
    a64::OPC::cbnz_w, 0x1 },  // cas [1505]
  { {+PARAM::scratch_gpr, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1506]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::scratch_gpr, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // cas [1507]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintp_s, 0x3 },  // ceil [1508]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintp_d, 0x3 },  // ceil [1509]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintm_s, 0x3 },  // floor [1510]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintm_d, 0x3 },  // floor [1511]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frinta_s, 0x3 },  // round [1512]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frinta_d, 0x3 },  // round [1513]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintz_s, 0x3 },  // trunc [1514]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::frintz_d, 0x3 },  // trunc [1515]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fabs_s, 0x3 },  // copysign [1516]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fabs_d, 0x3 },  // copysign [1517]
  { {+PARAM::scratch_gpr, +PARAM::reg2},
    a64::OPC::fmov_w_from_s, 0x3 },  // copysign [1518]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fabs_s, 0x3 },  // copysign [1519]
  { {+PARAM::scratch_gpr, 31, 2},
    a64::OPC::tbz, 0x1 },  // copysign [1520]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::fneg_s, 0x3 },  // copysign [1521]
  { {+PARAM::scratch_gpr, +PARAM::reg2},
    a64::OPC::fmov_x_from_d, 0x3 },  // copysign [1522]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fabs_d, 0x3 },  // copysign [1523]
  { {+PARAM::scratch_gpr, 63, 0},
    a64::OPC::tbz, 0x1 },  // copysign [1524]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::fneg_d, 0x3 },  // copysign [1525]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fsqrt_s, 0x3 },  // sqrt [1526]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fsqrt_d, 0x3 },  // sqrt [1527]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::clz_w, 0x3 },  // cntlz [1528]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::clz_w, 0x3 },  // cntlz [1529]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::clz_x, 0x3 },  // cntlz [1530]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::clz_x, 0x3 },  // cntlz [1531]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::rbit_w, 0x3 },  // cnttz [1532]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::clz_w, 0x3 },  // cnttz [1533]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::rbit_w, 0x3 },  // cnttz [1534]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::clz_w, 0x3 },  // cnttz [1535]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::rbit_x, 0x3 },  // cnttz [1536]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::clz_x, 0x3 },  // cnttz [1537]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::rbit_x, 0x3 },  // cnttz [1538]
  { {+PARAM::reg0, +PARAM::reg0},
    a64::OPC::clz_x, 0x3 },  // cnttz [1539]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x5 },  // cntpop [1540]
  { {+PARAM::scratch_flt, +PARAM::reg0},
    a64::OPC::fmov_d_from_x, 0x3 },  // cntpop [1541]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::cnt_8b, 0x3 },  // cntpop [1542]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::uaddlv_8b, 0x3 },  // cntpop [1543]
  { {+PARAM::reg0, +PARAM::scratch_flt},
    a64::OPC::fmov_w_from_s, 0x3 },  // cntpop [1544]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x5 },  // cntpop [1545]
  { {+PARAM::scratch_flt, +PARAM::reg0},
    a64::OPC::fmov_d_from_x, 0x3 },  // cntpop [1546]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::cnt_8b, 0x3 },  // cntpop [1547]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::uaddlv_8b, 0x3 },  // cntpop [1548]
  { {+PARAM::reg0, +PARAM::scratch_flt},
    a64::OPC::fmov_w_from_s, 0x3 },  // cntpop [1549]
  { {+PARAM::scratch_flt, +PARAM::reg1},
    a64::OPC::fmov_d_from_x, 0x3 },  // cntpop [1550]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::cnt_8b, 0x3 },  // cntpop [1551]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::uaddlv_8b, 0x3 },  // cntpop [1552]
  { {+PARAM::reg0, +PARAM::scratch_flt},
    a64::OPC::fmov_w_from_s, 0x3 },  // cntpop [1553]
  { {+PARAM::scratch_flt, +PARAM::reg1},
    a64::OPC::fmov_d_from_x, 0x3 },  // cntpop [1554]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::cnt_8b, 0x3 },  // cntpop [1555]
  { {+PARAM::scratch_flt, +PARAM::scratch_flt},
    a64::OPC::uaddlv_8b, 0x3 },  // cntpop [1556]
  { {+PARAM::reg0, +PARAM::scratch_flt},
    a64::OPC::fmov_w_from_s, 0x3 },  // cntpop [1557]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1558]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1559]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1560]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1561]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1562]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1563]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1564]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1565]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1566]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1567]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1568]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1569]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1570]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1571]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1572]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1573]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1574]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1575]
  { {+PARAM::reg0, +PARAM::frame_size},
    a64::OPC::movz_x_imm, 0x3 },  // getfp [1576]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, 0},
    a64::OPC::add_x_reg_uxtx, 0x5 },  // getfp [1577]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1578]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1579]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1580]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1581]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1582]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1583]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1584]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1585]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1586]
  { {+PARAM::reg0, +FIXARG::WZR, 0},
    a64::OPC::add_x_imm, 0x1 },  // getsp [1587]
};

const uint16_t kPatternJumper[256] = {
 0 /* --- */,  0 /* .mem */,  0 /* .data */,  0 /* .addr.fun */, 
 0 /* .addr.mem */,  0 /* .fun */,  0 /* .bbl */,  0 /* .reg */, 
 0 /* .stk */,  0 /* .jtb */,  0 /* --- */,  0 /* --- */, 
 0 /* --- */,  0 /* --- */,  0 /* --- */,  0 /* --- */, 
 0 /* add */,  10 /* sub */,  24 /* mul */,  30 /* div */, 
 36 /* --- */,  36 /* --- */,  36 /* --- */,  36 /* --- */, 
 36 /* xor */,  44 /* and */,  52 /* or */,  60 /* shl */, 
 68 /* shr */,  76 /* rem */,  76 /* clmul */,  76 /* --- */, 
 76 /* beq */,  92 /* bne */,  108 /* blt */,  130 /* ble */, 
 152 /* --- */,  152 /* --- */,  152 /* --- */,  152 /* --- */, 
 152 /* switch */,  153 /* bra */,  154 /* ret */,  154 /* bsr */, 
 155 /* jsr */,  156 /* syscall */,  157 /* trap */,  158 /* --- */, 
 158 /* pusharg */,  158 /* poparg */,  158 /* conv */,  236 /* bitcast */, 
 264 /* mov */,  316 /* cmpeq */,  464 /* cmplt */,  510 /* --- */, 
 510 /* lea */,  518 /* lea.mem */,  522 /* lea.stk */,  534 /* lea.fun */, 
 535 /* --- */,  535 /* --- */,  535 /* --- */,  535 /* --- */, 
 535 /* ld */,  631 /* ld.mem */,  631 /* ld.stk */,  679 /* --- */, 
 679 /* st */,  727 /* st.mem */,  727 /* st.stk */,  775 /* --- */, 
 775 /* cas */,  815 /* cas.mem */,  815 /* cas.stk */,  815 /* --- */, 
 815 /* --- */,  815 /* --- */,  815 /* --- */,  815 /* --- */, 
 815 /* ceil */,  817 /* floor */,  819 /* round */,  821 /* trunc */, 
 823 /* copysign */,  827 /* sqrt */,  829 /* --- */,  829 /* --- */, 
 829 /* sin */,  829 /* cos */,  829 /* tan */,  829 /* asin */, 
 829 /* acos */,  829 /* atan */,  829 /* exp */,  829 /* log */, 
 829 /* cntlz */,  833 /* cnttz */,  837 /* cntpop */,  841 /* --- */, 
 841 /* --- */,  841 /* --- */,  841 /* --- */,  841 /* --- */, 
 841 /* --- */,  841 /* --- */,  841 /* --- */,  841 /* --- */, 
 841 /* --- */,  841 /* --- */,  841 /* --- */,  841 /* --- */, 
 841 /* nop */,  841 /* nop1 */,  841 /* --- */,  841 /* --- */, 
 841 /* --- */,  841 /* --- */,  841 /* --- */,  841 /* line */, 
 841 /* inline */,  841 /* getfp */,  851 /* getsp */,  861 /* gettp */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* bcopy */,  861 /* --- */,  861 /* bzero */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
 861 /* --- */,  861 /* --- */,  861 /* --- */,  861 /* --- */, 
};

const Pattern kPatterns[] = {
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1], 1 },  // add [0]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[2], 1 },  // add [1]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[3], 1 },  // add [2]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[4], 1 },  // add [3]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[5], 1 },  // add [4]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[6], 1 },  // add [5]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[7], 1 },  // add [6]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[8], 1 },  // add [7]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[9], 1 },  // add [8]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[10], 1 },  // add [9]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[11], 1 },  // sub [10]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[12], 1 },  // sub [11]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[13], 1 },  // sub [12]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[14], 1 },  // sub [13]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[15], 1 },  // sub [14]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[16], 1 },  // sub [15]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[17], 1 },  // sub [16]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[18], 1 },  // sub [17]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[19], 1 },  // sub [18]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[20], 1 },  // sub [19]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[21], 1 },  // sub [20]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[22], 1 },  // sub [21]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[23], 1 },  // sub [22]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[24], 1 },  // sub [23]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[25], 1 },  // mul [24]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[26], 1 },  // mul [25]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[27], 1 },  // mul [26]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[28], 1 },  // mul [27]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[29], 1 },  // mul [28]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[30], 1 },  // mul [29]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[31], 1 },  // div [30]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[32], 1 },  // div [31]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[33], 1 },  // div [32]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[34], 1 },  // div [33]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[35], 1 },  // div [34]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[36], 1 },  // div [35]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[37], 1 },  // xor [36]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[38], 1 },  // xor [37]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[39], 1 },  // xor [38]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[40], 1 },  // xor [39]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[41], 1 },  // xor [40]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[42], 1 },  // xor [41]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[43], 1 },  // xor [42]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[44], 1 },  // xor [43]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[45], 1 },  // and [44]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[46], 1 },  // and [45]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[47], 1 },  // and [46]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[48], 1 },  // and [47]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[49], 1 },  // and [48]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[50], 1 },  // and [49]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[51], 1 },  // and [50]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[52], 1 },  // and [51]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[53], 1 },  // or [52]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[54], 1 },  // or [53]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[55], 1 },  // or [54]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[56], 1 },  // or [55]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[57], 1 },  // or [56]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[58], 1 },  // or [57]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[59], 1 },  // or [58]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_X},
    &kInsTemplates[60], 1 },  // or [59]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[61], 1 },  // shl [60]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[62], 1 },  // shl [61]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[63], 1 },  // shl [62]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[64], 1 },  // shl [63]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[65], 1 },  // shl [64]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[66], 1 },  // shl [65]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[67], 1 },  // shl [66]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[68], 1 },  // shl [67]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[69], 1 },  // shr [68]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[70], 1 },  // shr [69]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[71], 1 },  // shr [70]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[72], 1 },  // shr [71]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[73], 1 },  // shr [72]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[74], 1 },  // shr [73]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[75], 1 },  // shr [74]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[76], 1 },  // shr [75]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[77], 2 },  // beq [76]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[79], 2 },  // beq [77]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[81], 2 },  // beq [78]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[83], 2 },  // beq [79]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[85], 2 },  // beq [80]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[87], 2 },  // beq [81]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[89], 2 },  // beq [82]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[91], 2 },  // beq [83]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[93], 2 },  // beq [84]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[95], 2 },  // beq [85]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[97], 2 },  // beq [86]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[99], 2 },  // beq [87]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[101], 2 },  // beq [88]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[103], 2 },  // beq [89]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[105], 2 },  // beq [90]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[107], 2 },  // beq [91]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[109], 2 },  // bne [92]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[111], 2 },  // bne [93]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[113], 2 },  // bne [94]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[115], 2 },  // bne [95]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[117], 2 },  // bne [96]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[119], 2 },  // bne [97]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[121], 2 },  // bne [98]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[123], 2 },  // bne [99]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[125], 2 },  // bne [100]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[127], 2 },  // bne [101]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[129], 2 },  // bne [102]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[131], 2 },  // bne [103]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[133], 2 },  // bne [104]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[135], 2 },  // bne [105]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[137], 2 },  // bne [106]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[139], 2 },  // bne [107]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[141], 2 },  // blt [108]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[143], 2 },  // blt [109]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[145], 2 },  // blt [110]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[147], 2 },  // blt [111]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[149], 2 },  // blt [112]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[151], 2 },  // blt [113]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[153], 2 },  // blt [114]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[155], 2 },  // blt [115]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[157], 2 },  // blt [116]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[159], 2 },  // blt [117]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[161], 2 },  // blt [118]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[163], 2 },  // blt [119]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[165], 2 },  // blt [120]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[167], 2 },  // blt [121]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[169], 2 },  // blt [122]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[171], 2 },  // blt [123]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[173], 2 },  // blt [124]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[175], 2 },  // blt [125]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[177], 2 },  // blt [126]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[179], 2 },  // blt [127]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[181], 2 },  // blt [128]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[183], 2 },  // blt [129]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[185], 2 },  // ble [130]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[187], 2 },  // ble [131]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[189], 2 },  // ble [132]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[191], 2 },  // ble [133]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[193], 2 },  // ble [134]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[195], 2 },  // ble [135]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[197], 2 },  // ble [136]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[199], 2 },  // ble [137]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[201], 2 },  // ble [138]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[203], 2 },  // ble [139]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[205], 2 },  // ble [140]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[207], 2 },  // ble [141]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[209], 2 },  // ble [142]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[211], 2 },  // ble [143]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[213], 2 },  // ble [144]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[215], 2 },  // ble [145]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[217], 2 },  // ble [146]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[219], 2 },  // ble [147]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[221], 2 },  // ble [148]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[223], 2 },  // ble [149]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[225], 2 },  // ble [150]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[227], 2 },  // ble [151]
  { {DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[229], 4 },  // switch [152]
  { {DK::INVALID},
    {IC::INVALID},
    &kInsTemplates[233], 1 },  // bra [153]
  { {DK::INVALID},
    {IC::INVALID},
    &kInsTemplates[234], 1 },  // bsr [154]
  { {DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[235], 1 },  // jsr [155]
  { {DK::INVALID, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[236], 2 },  // syscall [156]
  { {},
    {},
    &kInsTemplates[238], 1 },  // trap [157]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[239], 1 },  // conv [158]
  { {DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[240], 1 },  // conv [159]
  { {DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[241], 1 },  // conv [160]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[242], 1 },  // conv [161]
  { {DK::U32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[243], 1 },  // conv [162]
  { {DK::U32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[244], 1 },  // conv [163]
  { {DK::S32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[245], 1 },  // conv [164]
  { {DK::S32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[246], 1 },  // conv [165]
  { {DK::U16, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[247], 1 },  // conv [166]
  { {DK::U16, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[248], 1 },  // conv [167]
  { {DK::S16, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[249], 1 },  // conv [168]
  { {DK::S16, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[250], 1 },  // conv [169]
  { {DK::U8, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[251], 1 },  // conv [170]
  { {DK::U8, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[252], 1 },  // conv [171]
  { {DK::S8, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[253], 1 },  // conv [172]
  { {DK::S8, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[254], 1 },  // conv [173]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[255], 1 },  // conv [174]
  { {DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[256], 1 },  // conv [175]
  { {DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[257], 1 },  // conv [176]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[258], 1 },  // conv [177]
  { {DK::U16, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[259], 1 },  // conv [178]
  { {DK::U16, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[260], 1 },  // conv [179]
  { {DK::S16, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[261], 1 },  // conv [180]
  { {DK::S16, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[262], 1 },  // conv [181]
  { {DK::U8, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[263], 1 },  // conv [182]
  { {DK::U8, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[264], 1 },  // conv [183]
  { {DK::S8, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[265], 1 },  // conv [184]
  { {DK::S8, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[266], 1 },  // conv [185]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[267], 1 },  // conv [186]
  { {DK::U16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[268], 1 },  // conv [187]
  { {DK::S16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[269], 1 },  // conv [188]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[270], 1 },  // conv [189]
  { {DK::U8, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[271], 1 },  // conv [190]
  { {DK::U8, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[272], 1 },  // conv [191]
  { {DK::S8, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[273], 1 },  // conv [192]
  { {DK::S8, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[274], 1 },  // conv [193]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[275], 1 },  // conv [194]
  { {DK::U8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[276], 1 },  // conv [195]
  { {DK::S8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[277], 1 },  // conv [196]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[278], 1 },  // conv [197]
  { {DK::U64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[279], 1 },  // conv [198]
  { {DK::S64, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[280], 1 },  // conv [199]
  { {DK::S64, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[281], 1 },  // conv [200]
  { {DK::S64, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[282], 1 },  // conv [201]
  { {DK::S64, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[283], 1 },  // conv [202]
  { {DK::S32, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[284], 1 },  // conv [203]
  { {DK::S32, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[285], 1 },  // conv [204]
  { {DK::S32, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[286], 1 },  // conv [205]
  { {DK::S32, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[287], 1 },  // conv [206]
  { {DK::U64, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[288], 1 },  // conv [207]
  { {DK::U64, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[289], 1 },  // conv [208]
  { {DK::U64, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[290], 1 },  // conv [209]
  { {DK::U64, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[291], 1 },  // conv [210]
  { {DK::U32, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[292], 1 },  // conv [211]
  { {DK::U32, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[293], 1 },  // conv [212]
  { {DK::U32, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[294], 1 },  // conv [213]
  { {DK::U32, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[295], 1 },  // conv [214]
  { {DK::U64, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[296], 1 },  // conv [215]
  { {DK::S64, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[297], 1 },  // conv [216]
  { {DK::S64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[298], 1 },  // conv [217]
  { {DK::F64, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[299], 1 },  // conv [218]
  { {DK::F32, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[300], 1 },  // conv [219]
  { {DK::F64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[301], 1 },  // conv [220]
  { {DK::F64, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[302], 1 },  // conv [221]
  { {DK::F32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[303], 1 },  // conv [222]
  { {DK::F32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[304], 1 },  // conv [223]
  { {DK::F64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[305], 1 },  // conv [224]
  { {DK::F64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[306], 1 },  // conv [225]
  { {DK::F32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[307], 1 },  // conv [226]
  { {DK::F32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[308], 1 },  // conv [227]
  { {DK::S32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[309], 1 },  // conv [228]
  { {DK::S32, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[310], 1 },  // conv [229]
  { {DK::U32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[311], 1 },  // conv [230]
  { {DK::U32, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[312], 1 },  // conv [231]
  { {DK::S64, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[313], 1 },  // conv [232]
  { {DK::S64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[314], 1 },  // conv [233]
  { {DK::U64, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[315], 1 },  // conv [234]
  { {DK::U64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[316], 1 },  // conv [235]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[317], 1 },  // bitcast [236]
  { {DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[318], 1 },  // bitcast [237]
  { {DK::U64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[319], 1 },  // bitcast [238]
  { {DK::U64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[320], 1 },  // bitcast [239]
  { {DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[321], 1 },  // bitcast [240]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[322], 1 },  // bitcast [241]
  { {DK::S64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[323], 1 },  // bitcast [242]
  { {DK::S64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[324], 1 },  // bitcast [243]
  { {DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[325], 1 },  // bitcast [244]
  { {DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[326], 1 },  // bitcast [245]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[327], 1 },  // bitcast [246]
  { {DK::A64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[328], 1 },  // bitcast [247]
  { {DK::C64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[329], 1 },  // bitcast [248]
  { {DK::C64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[330], 1 },  // bitcast [249]
  { {DK::C64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[331], 1 },  // bitcast [250]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[332], 1 },  // bitcast [251]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[333], 1 },  // bitcast [252]
  { {DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[334], 1 },  // bitcast [253]
  { {DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[335], 1 },  // bitcast [254]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[336], 1 },  // bitcast [255]
  { {DK::F64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[337], 1 },  // bitcast [256]
  { {DK::F64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[338], 1 },  // bitcast [257]
  { {DK::F32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[339], 1 },  // bitcast [258]
  { {DK::F32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[340], 1 },  // bitcast [259]
  { {DK::U64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[341], 1 },  // bitcast [260]
  { {DK::S64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[342], 1 },  // bitcast [261]
  { {DK::U32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[343], 1 },  // bitcast [262]
  { {DK::S32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[344], 1 },  // bitcast [263]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[345], 1 },  // mov [264]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[346], 1 },  // mov [265]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[347], 1 },  // mov [266]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[348], 2 },  // mov [267]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[350], 4 },  // mov [268]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[354], 1 },  // mov [269]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[355], 1 },  // mov [270]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[356], 1 },  // mov [271]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[357], 2 },  // mov [272]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[359], 4 },  // mov [273]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[363], 1 },  // mov [274]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[364], 1 },  // mov [275]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[365], 1 },  // mov [276]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[366], 2 },  // mov [277]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[368], 4 },  // mov [278]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[372], 1 },  // mov [279]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[373], 1 },  // mov [280]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[374], 1 },  // mov [281]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[375], 2 },  // mov [282]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[377], 4 },  // mov [283]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[381], 1 },  // mov [284]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[382], 1 },  // mov [285]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[383], 1 },  // mov [286]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[384], 2 },  // mov [287]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[386], 4 },  // mov [288]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[390], 1 },  // mov [289]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[391], 1 },  // mov [290]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[392], 1 },  // mov [291]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[393], 2 },  // mov [292]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[395], 4 },  // mov [293]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[399], 1 },  // mov [294]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[400], 1 },  // mov [295]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[401], 1 },  // mov [296]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[402], 2 },  // mov [297]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[404], 4 },  // mov [298]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[408], 1 },  // mov [299]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[409], 1 },  // mov [300]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[410], 1 },  // mov [301]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[411], 2 },  // mov [302]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[413], 4 },  // mov [303]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[417], 1 },  // mov [304]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[418], 1 },  // mov [305]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[419], 1 },  // mov [306]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[420], 2 },  // mov [307]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[422], 4 },  // mov [308]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[426], 1 },  // mov [309]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[427], 1 },  // mov [310]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[428], 1 },  // mov [311]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[429], 2 },  // mov [312]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[431], 4 },  // mov [313]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[435], 1 },  // mov [314]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[436], 1 },  // mov [315]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[437], 2 },  // cmpeq [316]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[439], 2 },  // cmpeq [317]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[441], 2 },  // cmpeq [318]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[443], 2 },  // cmpeq [319]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[445], 2 },  // cmpeq [320]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[447], 2 },  // cmpeq [321]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[449], 2 },  // cmpeq [322]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[451], 2 },  // cmpeq [323]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[453], 2 },  // cmpeq [324]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[455], 2 },  // cmpeq [325]
  { {DK::U32, DK::U32, DK::U32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[457], 2 },  // cmpeq [326]
  { {DK::U32, DK::U32, DK::U32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[459], 2 },  // cmpeq [327]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[461], 2 },  // cmpeq [328]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[463], 2 },  // cmpeq [329]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[465], 2 },  // cmpeq [330]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[467], 2 },  // cmpeq [331]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[469], 2 },  // cmpeq [332]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[471], 2 },  // cmpeq [333]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[473], 2 },  // cmpeq [334]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[475], 2 },  // cmpeq [335]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[477], 2 },  // cmpeq [336]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[479], 2 },  // cmpeq [337]
  { {DK::S32, DK::S32, DK::S32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[481], 2 },  // cmpeq [338]
  { {DK::S32, DK::S32, DK::S32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[483], 2 },  // cmpeq [339]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[485], 2 },  // cmpeq [340]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[487], 2 },  // cmpeq [341]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[489], 2 },  // cmpeq [342]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[491], 2 },  // cmpeq [343]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[493], 2 },  // cmpeq [344]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[495], 2 },  // cmpeq [345]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[497], 2 },  // cmpeq [346]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[499], 2 },  // cmpeq [347]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[501], 2 },  // cmpeq [348]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[503], 2 },  // cmpeq [349]
  { {DK::U64, DK::U64, DK::U64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[505], 2 },  // cmpeq [350]
  { {DK::U64, DK::U64, DK::U64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[507], 2 },  // cmpeq [351]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[509], 2 },  // cmpeq [352]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[511], 2 },  // cmpeq [353]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[513], 2 },  // cmpeq [354]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[515], 2 },  // cmpeq [355]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[517], 2 },  // cmpeq [356]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[519], 2 },  // cmpeq [357]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[521], 2 },  // cmpeq [358]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[523], 2 },  // cmpeq [359]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[525], 2 },  // cmpeq [360]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[527], 2 },  // cmpeq [361]
  { {DK::S64, DK::S64, DK::S64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[529], 2 },  // cmpeq [362]
  { {DK::S64, DK::S64, DK::S64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[531], 2 },  // cmpeq [363]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[533], 2 },  // cmpeq [364]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[535], 2 },  // cmpeq [365]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[537], 2 },  // cmpeq [366]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[539], 2 },  // cmpeq [367]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[541], 2 },  // cmpeq [368]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[543], 2 },  // cmpeq [369]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[545], 2 },  // cmpeq [370]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[547], 2 },  // cmpeq [371]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[549], 2 },  // cmpeq [372]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[551], 2 },  // cmpeq [373]
  { {DK::A64, DK::A64, DK::A64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[553], 2 },  // cmpeq [374]
  { {DK::A64, DK::A64, DK::A64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[555], 2 },  // cmpeq [375]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[557], 2 },  // cmpeq [376]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[559], 2 },  // cmpeq [377]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[561], 2 },  // cmpeq [378]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[563], 2 },  // cmpeq [379]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[565], 2 },  // cmpeq [380]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[567], 2 },  // cmpeq [381]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[569], 2 },  // cmpeq [382]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[571], 2 },  // cmpeq [383]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[573], 2 },  // cmpeq [384]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[575], 2 },  // cmpeq [385]
  { {DK::C64, DK::C64, DK::C64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[577], 2 },  // cmpeq [386]
  { {DK::C64, DK::C64, DK::C64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[579], 2 },  // cmpeq [387]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[581], 2 },  // cmpeq [388]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[583], 2 },  // cmpeq [389]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[585], 2 },  // cmpeq [390]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[587], 2 },  // cmpeq [391]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[589], 2 },  // cmpeq [392]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[591], 2 },  // cmpeq [393]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[593], 2 },  // cmpeq [394]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[595], 2 },  // cmpeq [395]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[597], 2 },  // cmpeq [396]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[599], 2 },  // cmpeq [397]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[601], 2 },  // cmpeq [398]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[603], 2 },  // cmpeq [399]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[605], 2 },  // cmpeq [400]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[607], 2 },  // cmpeq [401]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[609], 2 },  // cmpeq [402]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[611], 2 },  // cmpeq [403]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[613], 2 },  // cmpeq [404]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[615], 2 },  // cmpeq [405]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[617], 2 },  // cmpeq [406]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[619], 2 },  // cmpeq [407]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[621], 2 },  // cmpeq [408]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[623], 2 },  // cmpeq [409]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[625], 2 },  // cmpeq [410]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[627], 2 },  // cmpeq [411]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[629], 2 },  // cmpeq [412]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[631], 2 },  // cmpeq [413]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[633], 2 },  // cmpeq [414]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[635], 2 },  // cmpeq [415]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[637], 2 },  // cmpeq [416]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[639], 2 },  // cmpeq [417]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[641], 2 },  // cmpeq [418]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[643], 2 },  // cmpeq [419]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[645], 2 },  // cmpeq [420]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[647], 2 },  // cmpeq [421]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[649], 2 },  // cmpeq [422]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[651], 2 },  // cmpeq [423]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[653], 2 },  // cmpeq [424]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[655], 2 },  // cmpeq [425]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[657], 2 },  // cmpeq [426]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[659], 2 },  // cmpeq [427]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[661], 2 },  // cmpeq [428]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[663], 2 },  // cmpeq [429]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[665], 2 },  // cmpeq [430]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[667], 2 },  // cmpeq [431]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[669], 2 },  // cmpeq [432]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[671], 2 },  // cmpeq [433]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[673], 2 },  // cmpeq [434]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[675], 2 },  // cmpeq [435]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[677], 2 },  // cmpeq [436]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[679], 2 },  // cmpeq [437]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[681], 2 },  // cmpeq [438]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[683], 2 },  // cmpeq [439]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[685], 2 },  // cmpeq [440]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[687], 2 },  // cmpeq [441]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[689], 2 },  // cmpeq [442]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[691], 2 },  // cmpeq [443]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[693], 2 },  // cmpeq [444]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[695], 2 },  // cmpeq [445]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[697], 2 },  // cmpeq [446]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[699], 2 },  // cmpeq [447]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[701], 2 },  // cmpeq [448]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[703], 2 },  // cmpeq [449]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[705], 2 },  // cmpeq [450]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[707], 2 },  // cmpeq [451]
  { {DK::U64, DK::U64, DK::U64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[709], 2 },  // cmpeq [452]
  { {DK::U64, DK::U64, DK::U64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[711], 2 },  // cmpeq [453]
  { {DK::S64, DK::S64, DK::S64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[713], 2 },  // cmpeq [454]
  { {DK::S64, DK::S64, DK::S64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[715], 2 },  // cmpeq [455]
  { {DK::A64, DK::A64, DK::A64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[717], 2 },  // cmpeq [456]
  { {DK::A64, DK::A64, DK::A64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[719], 2 },  // cmpeq [457]
  { {DK::C64, DK::C64, DK::C64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[721], 2 },  // cmpeq [458]
  { {DK::C64, DK::C64, DK::C64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[723], 2 },  // cmpeq [459]
  { {DK::F64, DK::F64, DK::F64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[725], 2 },  // cmpeq [460]
  { {DK::F64, DK::F64, DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[727], 2 },  // cmpeq [461]
  { {DK::F32, DK::F32, DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[729], 2 },  // cmpeq [462]
  { {DK::F32, DK::F32, DK::F32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[731], 2 },  // cmpeq [463]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[733], 2 },  // cmplt [464]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[735], 2 },  // cmplt [465]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[737], 2 },  // cmplt [466]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[739], 2 },  // cmplt [467]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[741], 2 },  // cmplt [468]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[743], 2 },  // cmplt [469]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[745], 2 },  // cmplt [470]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[747], 2 },  // cmplt [471]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[749], 2 },  // cmplt [472]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[751], 2 },  // cmplt [473]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[753], 2 },  // cmplt [474]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[755], 2 },  // cmplt [475]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[757], 2 },  // cmplt [476]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[759], 2 },  // cmplt [477]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[761], 2 },  // cmplt [478]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[763], 2 },  // cmplt [479]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[765], 2 },  // cmplt [480]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[767], 2 },  // cmplt [481]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[769], 2 },  // cmplt [482]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[771], 2 },  // cmplt [483]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[773], 2 },  // cmplt [484]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[775], 2 },  // cmplt [485]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[777], 2 },  // cmplt [486]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[779], 2 },  // cmplt [487]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[781], 2 },  // cmplt [488]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[783], 2 },  // cmplt [489]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[785], 2 },  // cmplt [490]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[787], 2 },  // cmplt [491]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[789], 2 },  // cmplt [492]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[791], 2 },  // cmplt [493]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[793], 2 },  // cmplt [494]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[795], 2 },  // cmplt [495]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[797], 2 },  // cmplt [496]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[799], 2 },  // cmplt [497]
  { {DK::U64, DK::U64, DK::U64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[801], 2 },  // cmplt [498]
  { {DK::U64, DK::U64, DK::U64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[803], 2 },  // cmplt [499]
  { {DK::S64, DK::S64, DK::S64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[805], 2 },  // cmplt [500]
  { {DK::S64, DK::S64, DK::S64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[807], 2 },  // cmplt [501]
  { {DK::A64, DK::A64, DK::A64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[809], 2 },  // cmplt [502]
  { {DK::A64, DK::A64, DK::A64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[811], 2 },  // cmplt [503]
  { {DK::C64, DK::C64, DK::C64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[813], 2 },  // cmplt [504]
  { {DK::C64, DK::C64, DK::C64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[815], 2 },  // cmplt [505]
  { {DK::F64, DK::F64, DK::F64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[817], 2 },  // cmplt [506]
  { {DK::F64, DK::F64, DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[819], 2 },  // cmplt [507]
  { {DK::F32, DK::F32, DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[821], 2 },  // cmplt [508]
  { {DK::F32, DK::F32, DK::F32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[823], 2 },  // cmplt [509]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[825], 1 },  // lea [510]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[826], 1 },  // lea [511]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[827], 1 },  // lea [512]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[828], 1 },  // lea [513]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[829], 1 },  // lea [514]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[830], 1 },  // lea [515]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[831], 1 },  // lea [516]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[832], 1 },  // lea [517]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[833], 2 },  // lea.mem [518]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[835], 2 },  // lea.mem [519]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[837], 2 },  // lea.mem [520]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[839], 2 },  // lea.mem [521]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[841], 1 },  // lea.stk [522]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[842], 2 },  // lea.stk [523]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[844], 3 },  // lea.stk [524]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[847], 1 },  // lea.stk [525]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[848], 2 },  // lea.stk [526]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[850], 3 },  // lea.stk [527]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[853], 1 },  // lea.stk [528]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[854], 2 },  // lea.stk [529]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[856], 3 },  // lea.stk [530]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[859], 1 },  // lea.stk [531]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[860], 2 },  // lea.stk [532]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[862], 3 },  // lea.stk [533]
  { {DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[865], 2 },  // lea.fun [534]
  { {DK::U64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[867], 1 },  // ld [535]
  { {DK::U64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[868], 1 },  // ld [536]
  { {DK::U64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[869], 1 },  // ld [537]
  { {DK::U64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[870], 1 },  // ld [538]
  { {DK::U64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[871], 1 },  // ld [539]
  { {DK::U64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[872], 1 },  // ld [540]
  { {DK::U64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[873], 1 },  // ld [541]
  { {DK::U64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[874], 1 },  // ld [542]
  { {DK::S64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[875], 1 },  // ld [543]
  { {DK::S64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[876], 1 },  // ld [544]
  { {DK::S64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[877], 1 },  // ld [545]
  { {DK::S64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[878], 1 },  // ld [546]
  { {DK::S64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[879], 1 },  // ld [547]
  { {DK::S64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[880], 1 },  // ld [548]
  { {DK::S64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[881], 1 },  // ld [549]
  { {DK::S64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[882], 1 },  // ld [550]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[883], 1 },  // ld [551]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[884], 1 },  // ld [552]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[885], 1 },  // ld [553]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[886], 1 },  // ld [554]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[887], 1 },  // ld [555]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[888], 1 },  // ld [556]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[889], 1 },  // ld [557]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[890], 1 },  // ld [558]
  { {DK::C64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[891], 1 },  // ld [559]
  { {DK::C64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[892], 1 },  // ld [560]
  { {DK::C64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[893], 1 },  // ld [561]
  { {DK::C64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[894], 1 },  // ld [562]
  { {DK::C64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[895], 1 },  // ld [563]
  { {DK::C64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[896], 1 },  // ld [564]
  { {DK::C64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[897], 1 },  // ld [565]
  { {DK::C64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[898], 1 },  // ld [566]
  { {DK::U32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[899], 1 },  // ld [567]
  { {DK::U32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[900], 1 },  // ld [568]
  { {DK::U32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[901], 1 },  // ld [569]
  { {DK::U32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[902], 1 },  // ld [570]
  { {DK::U32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[903], 1 },  // ld [571]
  { {DK::U32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[904], 1 },  // ld [572]
  { {DK::U32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[905], 1 },  // ld [573]
  { {DK::U32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[906], 1 },  // ld [574]
  { {DK::S32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[907], 1 },  // ld [575]
  { {DK::S32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[908], 1 },  // ld [576]
  { {DK::S32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[909], 1 },  // ld [577]
  { {DK::S32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[910], 1 },  // ld [578]
  { {DK::S32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[911], 1 },  // ld [579]
  { {DK::S32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[912], 1 },  // ld [580]
  { {DK::S32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[913], 1 },  // ld [581]
  { {DK::S32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[914], 1 },  // ld [582]
  { {DK::U16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[915], 1 },  // ld [583]
  { {DK::U16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[916], 1 },  // ld [584]
  { {DK::U16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[917], 1 },  // ld [585]
  { {DK::U16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[918], 1 },  // ld [586]
  { {DK::U16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[919], 1 },  // ld [587]
  { {DK::U16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[920], 1 },  // ld [588]
  { {DK::U16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[921], 1 },  // ld [589]
  { {DK::U16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[922], 1 },  // ld [590]
  { {DK::S16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[923], 1 },  // ld [591]
  { {DK::S16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[924], 1 },  // ld [592]
  { {DK::S16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[925], 1 },  // ld [593]
  { {DK::S16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[926], 1 },  // ld [594]
  { {DK::S16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[927], 1 },  // ld [595]
  { {DK::S16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[928], 1 },  // ld [596]
  { {DK::S16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[929], 1 },  // ld [597]
  { {DK::S16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[930], 1 },  // ld [598]
  { {DK::U8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[931], 1 },  // ld [599]
  { {DK::U8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[932], 1 },  // ld [600]
  { {DK::U8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[933], 1 },  // ld [601]
  { {DK::U8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[934], 1 },  // ld [602]
  { {DK::U8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[935], 1 },  // ld [603]
  { {DK::U8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[936], 1 },  // ld [604]
  { {DK::U8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[937], 1 },  // ld [605]
  { {DK::U8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[938], 1 },  // ld [606]
  { {DK::S8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[939], 1 },  // ld [607]
  { {DK::S8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[940], 1 },  // ld [608]
  { {DK::S8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[941], 1 },  // ld [609]
  { {DK::S8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[942], 1 },  // ld [610]
  { {DK::S8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[943], 1 },  // ld [611]
  { {DK::S8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[944], 1 },  // ld [612]
  { {DK::S8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[945], 1 },  // ld [613]
  { {DK::S8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[946], 1 },  // ld [614]
  { {DK::F32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[947], 1 },  // ld [615]
  { {DK::F32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[948], 1 },  // ld [616]
  { {DK::F32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[949], 1 },  // ld [617]
  { {DK::F32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[950], 1 },  // ld [618]
  { {DK::F32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[951], 1 },  // ld [619]
  { {DK::F32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[952], 1 },  // ld [620]
  { {DK::F32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[953], 1 },  // ld [621]
  { {DK::F32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[954], 1 },  // ld [622]
  { {DK::F64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[955], 1 },  // ld [623]
  { {DK::F64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[956], 1 },  // ld [624]
  { {DK::F64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[957], 1 },  // ld [625]
  { {DK::F64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[958], 1 },  // ld [626]
  { {DK::F64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[959], 1 },  // ld [627]
  { {DK::F64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[960], 1 },  // ld [628]
  { {DK::F64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[961], 1 },  // ld [629]
  { {DK::F64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[962], 1 },  // ld [630]
  { {DK::U64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[963], 1 },  // ld.stk [631]
  { {DK::U64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[964], 1 },  // ld.stk [632]
  { {DK::U64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[965], 1 },  // ld.stk [633]
  { {DK::U64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[966], 1 },  // ld.stk [634]
  { {DK::S64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[967], 1 },  // ld.stk [635]
  { {DK::S64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[968], 1 },  // ld.stk [636]
  { {DK::S64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[969], 1 },  // ld.stk [637]
  { {DK::S64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[970], 1 },  // ld.stk [638]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[971], 1 },  // ld.stk [639]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[972], 1 },  // ld.stk [640]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[973], 1 },  // ld.stk [641]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[974], 1 },  // ld.stk [642]
  { {DK::C64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[975], 1 },  // ld.stk [643]
  { {DK::C64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[976], 1 },  // ld.stk [644]
  { {DK::C64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[977], 1 },  // ld.stk [645]
  { {DK::C64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[978], 1 },  // ld.stk [646]
  { {DK::U32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[979], 1 },  // ld.stk [647]
  { {DK::U32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[980], 1 },  // ld.stk [648]
  { {DK::U32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[981], 1 },  // ld.stk [649]
  { {DK::U32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[982], 1 },  // ld.stk [650]
  { {DK::S32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[983], 1 },  // ld.stk [651]
  { {DK::S32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[984], 1 },  // ld.stk [652]
  { {DK::S32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[985], 1 },  // ld.stk [653]
  { {DK::S32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[986], 1 },  // ld.stk [654]
  { {DK::U16, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[987], 1 },  // ld.stk [655]
  { {DK::U16, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[988], 1 },  // ld.stk [656]
  { {DK::U16, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[989], 1 },  // ld.stk [657]
  { {DK::U16, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[990], 1 },  // ld.stk [658]
  { {DK::S16, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[991], 1 },  // ld.stk [659]
  { {DK::S16, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[992], 1 },  // ld.stk [660]
  { {DK::S16, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[993], 1 },  // ld.stk [661]
  { {DK::S16, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[994], 1 },  // ld.stk [662]
  { {DK::U8, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[995], 1 },  // ld.stk [663]
  { {DK::U8, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[996], 1 },  // ld.stk [664]
  { {DK::U8, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[997], 1 },  // ld.stk [665]
  { {DK::U8, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[998], 1 },  // ld.stk [666]
  { {DK::S8, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[999], 1 },  // ld.stk [667]
  { {DK::S8, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[1000], 1 },  // ld.stk [668]
  { {DK::S8, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[1001], 1 },  // ld.stk [669]
  { {DK::S8, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[1002], 1 },  // ld.stk [670]
  { {DK::F32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[1003], 1 },  // ld.stk [671]
  { {DK::F32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[1004], 1 },  // ld.stk [672]
  { {DK::F32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[1005], 1 },  // ld.stk [673]
  { {DK::F32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[1006], 1 },  // ld.stk [674]
  { {DK::F64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[1007], 1 },  // ld.stk [675]
  { {DK::F64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[1008], 1 },  // ld.stk [676]
  { {DK::F64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[1009], 1 },  // ld.stk [677]
  { {DK::F64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[1010], 1 },  // ld.stk [678]
  { {DK::A64, DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1011], 1 },  // st [679]
  { {DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1012], 1 },  // st [680]
  { {DK::A64, DK::S32, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1013], 1 },  // st [681]
  { {DK::A64, DK::U32, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1014], 1 },  // st [682]
  { {DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1015], 1 },  // st [683]
  { {DK::A64, DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1016], 1 },  // st [684]
  { {DK::A64, DK::S32, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1017], 1 },  // st [685]
  { {DK::A64, DK::U32, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1018], 1 },  // st [686]
  { {DK::A64, DK::S64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1019], 1 },  // st [687]
  { {DK::A64, DK::U64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1020], 1 },  // st [688]
  { {DK::A64, DK::S32, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1021], 1 },  // st [689]
  { {DK::A64, DK::U32, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1022], 1 },  // st [690]
  { {DK::A64, DK::S64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1023], 1 },  // st [691]
  { {DK::A64, DK::U64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1024], 1 },  // st [692]
  { {DK::A64, DK::S32, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1025], 1 },  // st [693]
  { {DK::A64, DK::U32, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1026], 1 },  // st [694]
  { {DK::A64, DK::S64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1027], 1 },  // st [695]
  { {DK::A64, DK::U64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1028], 1 },  // st [696]
  { {DK::A64, DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1029], 1 },  // st [697]
  { {DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1030], 1 },  // st [698]
  { {DK::A64, DK::S64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1031], 1 },  // st [699]
  { {DK::A64, DK::U64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1032], 1 },  // st [700]
  { {DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1033], 1 },  // st [701]
  { {DK::A64, DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1034], 1 },  // st [702]
  { {DK::A64, DK::S64, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1035], 1 },  // st [703]
  { {DK::A64, DK::U64, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1036], 1 },  // st [704]
  { {DK::A64, DK::S32, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1037], 1 },  // st [705]
  { {DK::A64, DK::U32, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1038], 1 },  // st [706]
  { {DK::A64, DK::S64, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1039], 1 },  // st [707]
  { {DK::A64, DK::U64, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1040], 1 },  // st [708]
  { {DK::A64, DK::S32, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1041], 1 },  // st [709]
  { {DK::A64, DK::U32, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1042], 1 },  // st [710]
  { {DK::A64, DK::S64, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1043], 1 },  // st [711]
  { {DK::A64, DK::U64, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1044], 1 },  // st [712]
  { {DK::A64, DK::S32, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1045], 1 },  // st [713]
  { {DK::A64, DK::U32, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1046], 1 },  // st [714]
  { {DK::A64, DK::S64, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1047], 1 },  // st [715]
  { {DK::A64, DK::U64, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1048], 1 },  // st [716]
  { {DK::A64, DK::S32, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1049], 1 },  // st [717]
  { {DK::A64, DK::U32, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1050], 1 },  // st [718]
  { {DK::A64, DK::S64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1051], 1 },  // st [719]
  { {DK::A64, DK::U64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1052], 1 },  // st [720]
  { {DK::A64, DK::S32, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1053], 1 },  // st [721]
  { {DK::A64, DK::U32, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1054], 1 },  // st [722]
  { {DK::A64, DK::S64, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1055], 1 },  // st [723]
  { {DK::A64, DK::U64, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1056], 1 },  // st [724]
  { {DK::A64, DK::S32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1057], 1 },  // st [725]
  { {DK::A64, DK::U32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1058], 1 },  // st [726]
  { {DK::INVALID, DK::S64, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1059], 1 },  // st.stk [727]
  { {DK::INVALID, DK::U64, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1060], 1 },  // st.stk [728]
  { {DK::INVALID, DK::S32, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1061], 1 },  // st.stk [729]
  { {DK::INVALID, DK::U32, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1062], 1 },  // st.stk [730]
  { {DK::INVALID, DK::S64, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1063], 1 },  // st.stk [731]
  { {DK::INVALID, DK::U64, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1064], 1 },  // st.stk [732]
  { {DK::INVALID, DK::S32, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1065], 1 },  // st.stk [733]
  { {DK::INVALID, DK::U32, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1066], 1 },  // st.stk [734]
  { {DK::INVALID, DK::S64, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1067], 1 },  // st.stk [735]
  { {DK::INVALID, DK::U64, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1068], 1 },  // st.stk [736]
  { {DK::INVALID, DK::S32, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1069], 1 },  // st.stk [737]
  { {DK::INVALID, DK::U32, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1070], 1 },  // st.stk [738]
  { {DK::INVALID, DK::S64, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1071], 1 },  // st.stk [739]
  { {DK::INVALID, DK::U64, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1072], 1 },  // st.stk [740]
  { {DK::INVALID, DK::S32, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1073], 1 },  // st.stk [741]
  { {DK::INVALID, DK::U32, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1074], 1 },  // st.stk [742]
  { {DK::INVALID, DK::S64, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1075], 1 },  // st.stk [743]
  { {DK::INVALID, DK::U64, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1076], 1 },  // st.stk [744]
  { {DK::INVALID, DK::S32, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1077], 1 },  // st.stk [745]
  { {DK::INVALID, DK::U32, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1078], 1 },  // st.stk [746]
  { {DK::INVALID, DK::S64, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1079], 1 },  // st.stk [747]
  { {DK::INVALID, DK::U64, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1080], 1 },  // st.stk [748]
  { {DK::INVALID, DK::S32, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1081], 1 },  // st.stk [749]
  { {DK::INVALID, DK::U32, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1082], 1 },  // st.stk [750]
  { {DK::INVALID, DK::S64, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1083], 1 },  // st.stk [751]
  { {DK::INVALID, DK::U64, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1084], 1 },  // st.stk [752]
  { {DK::INVALID, DK::S32, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1085], 1 },  // st.stk [753]
  { {DK::INVALID, DK::U32, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1086], 1 },  // st.stk [754]
  { {DK::INVALID, DK::S64, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1087], 1 },  // st.stk [755]
  { {DK::INVALID, DK::U64, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1088], 1 },  // st.stk [756]
  { {DK::INVALID, DK::S32, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1089], 1 },  // st.stk [757]
  { {DK::INVALID, DK::U32, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[1090], 1 },  // st.stk [758]
  { {DK::INVALID, DK::S64, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1091], 1 },  // st.stk [759]
  { {DK::INVALID, DK::U64, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1092], 1 },  // st.stk [760]
  { {DK::INVALID, DK::S32, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1093], 1 },  // st.stk [761]
  { {DK::INVALID, DK::U32, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1094], 1 },  // st.stk [762]
  { {DK::INVALID, DK::S64, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1095], 1 },  // st.stk [763]
  { {DK::INVALID, DK::U64, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1096], 1 },  // st.stk [764]
  { {DK::INVALID, DK::S32, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1097], 1 },  // st.stk [765]
  { {DK::INVALID, DK::U32, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[1098], 1 },  // st.stk [766]
  { {DK::INVALID, DK::S64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1099], 1 },  // st.stk [767]
  { {DK::INVALID, DK::U64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1100], 1 },  // st.stk [768]
  { {DK::INVALID, DK::S32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1101], 1 },  // st.stk [769]
  { {DK::INVALID, DK::U32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[1102], 1 },  // st.stk [770]
  { {DK::INVALID, DK::S64, DK::F64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1103], 1 },  // st.stk [771]
  { {DK::INVALID, DK::U64, DK::F64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1104], 1 },  // st.stk [772]
  { {DK::INVALID, DK::S32, DK::F64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1105], 1 },  // st.stk [773]
  { {DK::INVALID, DK::U32, DK::F64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[1106], 1 },  // st.stk [774]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1107], 10 },  // cas [775]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1117], 10 },  // cas [776]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1127], 10 },  // cas [777]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1137], 10 },  // cas [778]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1147], 10 },  // cas [779]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1157], 10 },  // cas [780]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1167], 10 },  // cas [781]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1177], 10 },  // cas [782]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1187], 10 },  // cas [783]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1197], 10 },  // cas [784]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1207], 10 },  // cas [785]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1217], 10 },  // cas [786]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1227], 10 },  // cas [787]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1237], 10 },  // cas [788]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1247], 10 },  // cas [789]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1257], 10 },  // cas [790]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1267], 10 },  // cas [791]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1277], 10 },  // cas [792]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1287], 10 },  // cas [793]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1297], 10 },  // cas [794]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1307], 10 },  // cas [795]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1317], 10 },  // cas [796]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1327], 10 },  // cas [797]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1337], 10 },  // cas [798]
  { {DK::U16, DK::U16, DK::U16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1347], 10 },  // cas [799]
  { {DK::U16, DK::U16, DK::U16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1357], 10 },  // cas [800]
  { {DK::U16, DK::U16, DK::U16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1367], 10 },  // cas [801]
  { {DK::U16, DK::U16, DK::U16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1377], 10 },  // cas [802]
  { {DK::S16, DK::S16, DK::S16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1387], 10 },  // cas [803]
  { {DK::S16, DK::S16, DK::S16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1397], 10 },  // cas [804]
  { {DK::S16, DK::S16, DK::S16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1407], 10 },  // cas [805]
  { {DK::S16, DK::S16, DK::S16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1417], 10 },  // cas [806]
  { {DK::U8, DK::U8, DK::U8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1427], 10 },  // cas [807]
  { {DK::U8, DK::U8, DK::U8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1437], 10 },  // cas [808]
  { {DK::U8, DK::U8, DK::U8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1447], 10 },  // cas [809]
  { {DK::U8, DK::U8, DK::U8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1457], 10 },  // cas [810]
  { {DK::S8, DK::S8, DK::S8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1467], 10 },  // cas [811]
  { {DK::S8, DK::S8, DK::S8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1477], 10 },  // cas [812]
  { {DK::S8, DK::S8, DK::S8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1487], 10 },  // cas [813]
  { {DK::S8, DK::S8, DK::S8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1497], 10 },  // cas [814]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1507], 1 },  // ceil [815]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1508], 1 },  // ceil [816]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1509], 1 },  // floor [817]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1510], 1 },  // floor [818]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1511], 1 },  // round [819]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1512], 1 },  // round [820]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1513], 1 },  // trunc [821]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1514], 1 },  // trunc [822]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1515], 1 },  // copysign [823]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::ZERO},
    &kInsTemplates[1516], 1 },  // copysign [824]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1517], 4 },  // copysign [825]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1521], 4 },  // copysign [826]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1525], 1 },  // sqrt [827]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1526], 1 },  // sqrt [828]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1527], 1 },  // cntlz [829]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1528], 1 },  // cntlz [830]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1529], 1 },  // cntlz [831]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1530], 1 },  // cntlz [832]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1531], 2 },  // cnttz [833]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1533], 2 },  // cnttz [834]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1535], 2 },  // cnttz [835]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1537], 2 },  // cnttz [836]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1539], 5 },  // cntpop [837]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1544], 5 },  // cntpop [838]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1549], 4 },  // cntpop [839]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[1553], 4 },  // cntpop [840]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1557], 2 },  // getfp [841]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1559], 2 },  // getfp [842]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1561], 2 },  // getfp [843]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1563], 2 },  // getfp [844]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1565], 2 },  // getfp [845]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1567], 2 },  // getfp [846]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1569], 2 },  // getfp [847]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1571], 2 },  // getfp [848]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1573], 2 },  // getfp [849]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1575], 2 },  // getfp [850]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1577], 1 },  // getsp [851]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1578], 1 },  // getsp [852]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1579], 1 },  // getsp [853]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1580], 1 },  // getsp [854]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1581], 1 },  // getsp [855]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1582], 1 },  // getsp [856]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1583], 1 },  // getsp [857]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1584], 1 },  // getsp [858]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1585], 1 },  // getsp [859]
  { {DK::A64},
    {IC::INVALID},
    &kInsTemplates[1586], 1 },  // getsp [860]
};
}  // namespace

const char* const IMM_CURB_ToStringMap[] = {
    "INVALID", // 0
    "ZERO", // 1
    "ANY", // 2
    "IMM_SHIFTED_10_21_22", // 3
    "IMM_10_15_16_22_W", // 4
    "IMM_10_15_16_22_X", // 5
    "IMM_SHIFTED_5_20_21_22", // 6
    "IMM_SHIFTED_5_20_21_22_NOT", // 7
    "pos_stk_combo_shifted_10_21_22", // 8
    "pos_stk_combo_16_bits", // 9
    "pos_stk_combo_32_bits", // 10
    "pos_stk_combo_10_21", // 11
    "pos_stk_combo_10_21_times_2", // 12
    "pos_stk_combo_10_21_times_4", // 13
    "pos_stk_combo_10_21_times_8", // 14
    "IMM_POS_32", // 15
    "ZZZ", // 16
};
const char* EnumToString(IMM_CURB x) { return IMM_CURB_ToStringMap[unsigned(x)]; }


const char* const PARAM_ToStringMap[] = {
    "invalid", // 0
    "reg0", // 1
    "reg1", // 2
    "reg2", // 3
    "reg3", // 4
    "reg4", // 5
    "num0", // 6
    "num1", // 7
    "num2", // 8
    "num3", // 9
    "num4", // 10
    "num0_neg", // 11
    "num1_neg", // 12
    "num2_neg", // 13
    "num3_neg", // 14
    "num4_neg", // 15
    "num0_not", // 16
    "num1_not", // 17
    "num2_not", // 18
    "bbl0", // 19
    "bbl2", // 20
    "fun0", // 21
    "scratch_gpr", // 22
    "scratch_flt", // 23
    "num2_rsb_width", // 24
    "num2_rsb_width_minus1", // 25
    "mem1_num2_prel_hi21", // 26
    "mem1_num2_lo12", // 27
    "stk1_offset2", // 28
    "stk1_offset2_lo", // 29
    "stk1_offset2_hi", // 30
    "stk0_offset1", // 31
    "stk0_offset1_lo", // 32
    "stk0_offset1_hi", // 33
    "fun1_prel_hi21", // 34
    "fun1_lo12", // 35
    "jtb1_prel_hi21", // 36
    "jtb1_lo12", // 37
    "num1_0_16", // 38
    "num1_16_32", // 39
    "num1_32_48", // 40
    "num1_48_64", // 41
    "frame_size", // 42
    "ZZZ", // 43
};
const char* EnumToString(PARAM x) { return PARAM_ToStringMap[unsigned(x)]; }

/* @AUTOGEN-END@ */

const Pattern* FindMatchingPattern(Ins ins) {
  const uint64_t type_matcher = ExtractTypeMaskForPattern(ins);
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (!PatternMatchesTypeCurbs(pat, type_matcher)) continue;
    if (0 == PatternMismatchesImmCurbs(pat, ins, false)) {
      return &pat;
    }
  }
  return nullptr;
}

uint8_t FindtImmediateMismatchesInBestMatchPattern(Ins ins,
                                                   bool assume_stk_op_matches) {
  uint8_t best = MATCH_IMPOSSIBLE;
  uint8_t best_num_bits = __builtin_popcount(best);
  const uint64_t type_matcher = ExtractTypeMaskForPattern(ins);
  // std::cout << "@type_matcher: " << std::hex << type_matcher << "\n";
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (!PatternMatchesTypeCurbs(pat, type_matcher)) continue;
    const uint8_t mismatches =
        PatternMismatchesImmCurbs(pat, ins, assume_stk_op_matches);
    if (mismatches == 0) return 0;
    const uint8_t num_bits = __builtin_popcount(mismatches);
    if (num_bits < best_num_bits) {
      best = mismatches;
      best_num_bits = num_bits;
    }
  }
  return best;
}

namespace {
int32_t ExtractReg(Reg reg) {
  ASSERT(reg.kind() == RefKind::REG, "not a reg " << unsigned(reg.kind()));
  CpuReg cpu_reg(RegCpuReg(reg));
  ASSERT(cpu_reg.kind() == RefKind::CPU_REG, "no cpu reg");
  return CpuRegNo(cpu_reg);
}

int64_t ExtractNumNeg(Const num) { return -ConstValueInt64(num); }

int64_t ExtractNumNot(Const num) { return ~ConstValueInt64(num); }

// TODO: should this return an uint32_t
int32_t GetStackOffset(Handle stk, Handle num) {
  ASSERT(stk.kind() == RefKind::STK, "");
  ASSERT(num.kind() == RefKind::CONST, "");
  return StkSlot(Stk(stk)) + ConstValueInt32(Const(num));
}

int64_t ExtractParamOp(Ins ins, PARAM param, const EmitContext& ctx) {
  switch (param) {
    case PARAM::reg0:
      return ExtractReg(Reg(InsOperand(ins, 0)));
    case PARAM::reg1:
      return ExtractReg(Reg(InsOperand(ins, 1)));
    case PARAM::reg2:
      return ExtractReg(Reg(InsOperand(ins, 2)));
    case PARAM::reg3:
      return ExtractReg(Reg(InsOperand(ins, 3)));
    case PARAM::reg4:
      return ExtractReg(Reg(InsOperand(ins, 4)));
    case PARAM::num0:
      return ConstValueInt64(Const(InsOperand(ins, 0)));
    case PARAM::num1:
      return ConstValueInt64(Const(InsOperand(ins, 1)));
    case PARAM::num2:
      return ConstValueInt64(Const(InsOperand(ins, 2)));
    case PARAM::num3:
      return ConstValueInt64(Const(InsOperand(ins, 3)));
    case PARAM::num4:
      return ConstValueInt64(Const(InsOperand(ins, 4)));
    case PARAM::num0_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 0)));
    case PARAM::num1_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 1)));
    case PARAM::num2_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 2)));
    case PARAM::num3_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 3)));
    case PARAM::num4_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 4)));
    case PARAM::num0_not:
      return ExtractNumNot(Const(InsOperand(ins, 0)));
    case PARAM::num1_not:
      return ExtractNumNot(Const(InsOperand(ins, 1)));
    case PARAM::num2_not:
      return ExtractNumNot(Const(InsOperand(ins, 2)));
    case PARAM::num1_0_16:
      return ConstValueInt64(Const(InsOperand(ins, 1))) & 0xffffULL;
    case PARAM::num1_16_32:
      return (ConstValueInt64(Const(InsOperand(ins, 1))) >> 16ULL) & 0xffffULL;
    case PARAM::num1_32_48:
      return (ConstValueInt64(Const(InsOperand(ins, 1))) >> 32ULL) & 0xffffULL;
    case PARAM::num1_48_64:
      return (ConstValueInt64(Const(InsOperand(ins, 1))) >> 48ULL) & 0xffffULL;
    case PARAM::num2_rsb_width: {
      Const num = Const(InsOperand(ins, 2));
      unsigned width = DKBitWidth(ConstKind(num));
      int64_t val = ConstValueInt64(num);
      ASSERT(1 <= val && val <= width, "");
      return width - val;
    }
    case PARAM::num2_rsb_width_minus1: {
      Const num = Const(InsOperand(ins, 2));
      unsigned width = DKBitWidth(ConstKind(num));
      int64_t val = ConstValueInt64(num);
      ASSERT(1 <= val && val <= width, "");
      return width - val - 1;
    }

    case PARAM::stk0_offset1:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1));
    case PARAM::stk0_offset1_lo:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) & 0xffffU;

    case PARAM::stk0_offset1_hi:
      return (GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) >> 16U) &
             0xffff;
    case PARAM::stk1_offset2:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2));

    case PARAM::stk1_offset2_lo:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) & 0xffffU;

    case PARAM::stk1_offset2_hi:
      return (GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) >> 16U) &
             0xffffU;
    case PARAM::scratch_gpr:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::GPR,
             "expected gpr64 reg got " << Name(ctx.scratch_cpu_reg));
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::scratch_flt:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::FLT,
             "expected flt64 reg got " << Name(ctx.scratch_cpu_reg));
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::bbl0:
    case PARAM::bbl2:
    case PARAM::fun0:
    case PARAM::mem1_num2_lo12:
    case PARAM::mem1_num2_prel_hi21:
    case PARAM::fun1_lo12:
    case PARAM::fun1_prel_hi21:
    case PARAM::jtb1_lo12:
    case PARAM::jtb1_prel_hi21:
      // relocs, we return 0, as the value is irrelevant. MaybeHandleReloc()
      // does the heavy lifting
      return 0;
    case PARAM::frame_size:
      return ctx.FrameSize();
    case PARAM::invalid:
      return 0;
  }
  ASSERT(false, "unsupported parmm " << +param << " " << EnumToString(param));
  return 0;
}

void MaybeHandleReloc(a64::Ins* cpuins, unsigned pos, Ins ins, PARAM op) {
  Str symbol;
  auto handle_addend = [&](Const num) {
    cpuins->operands[pos] = ConstValueInt32(num);
  };
  switch (op) {
    case PARAM::bbl0:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::JUMP26;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 0)));
      break;
    case PARAM::bbl2:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::CONDBR19;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 2)));
      break;
    case PARAM::fun0:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::CALL26;
      symbol = Name(Fun(InsOperand(ins, 0)));
      break;
    case PARAM::mem1_num2_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::mem1_num2_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::fun1_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::fun1_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    default:
      return;
  }
  cpuins->reloc_pos = pos;
  cpuins->reloc_symbol = StrData(symbol);
}

}  // namespace

// number of args == MAX_OPERANDS
a64::Ins MakeIns(a64::OPC opc_enum,
                 int64_t x0,
                 int64_t x1,
                 int64_t x2,
                 int64_t x3,
                 int64_t x4) {
  const a64::Opcode* opc = &a64::OpcodeTable[+opc_enum];
  if (opc->num_fields > 0) x0 = a64::EncodeOperand(opc->fields[0], x0);
  if (opc->num_fields > 1) x1 = a64::EncodeOperand(opc->fields[1], x1);
  if (opc->num_fields > 2) x2 = a64::EncodeOperand(opc->fields[2], x2);
  if (opc->num_fields > 3) x3 = a64::EncodeOperand(opc->fields[3], x3);
  if (opc->num_fields > 4) x4 = a64::EncodeOperand(opc->fields[4], x4);
  return a64::Ins{
      opc,
      {(uint32_t)x0, (uint32_t)x1, (uint32_t)x2, (uint32_t)x3, (uint32_t)x4}};
}

a64::Ins MakeInsFromTmpl(const InsTmpl& tmpl, Ins ins, const EmitContext& ctx) {
  a64::Ins out;
  out.opcode = &a64::OpcodeTable[unsigned(tmpl.opcode)];
  // std::cout << "@@@@@@ OPCODE " << out.opcode->name << "\n";
  for (unsigned o = 0; o < out.opcode->num_fields; ++o) {
    if ((tmpl.template_mask & (1U << o)) == 0) {
      // fixed operand - we uses these verbatim
      out.operands[o] =
          a64::EncodeOperand(out.opcode->fields[o], tmpl.operands[o]);
    } else {
      // std::cout << "@@Handle " << o << " " <<
      // a64::EnumToString(out.opcode->fields[o]) <<  "\n";
      // parameters require extra processing
      auto param = PARAM(tmpl.operands[o]);
      out.operands[o] = a64::EncodeOperand(out.opcode->fields[o],
                                           ExtractParamOp(ins, param, ctx));
      // Note: this may overwrite    out.operands[o]
      MaybeHandleReloc(&out, o, ins, param);
    }
  }
  return out;
}

class RegBitVec {
 public:
  RegBitVec(uint32_t reg_bits) : reg_bits_(reg_bits), pos_(31) {}

  bool empty() const { return reg_bits_ == 0; }

  uint32_t next_reg_no() {
    while (((1U << pos_) & reg_bits_) == 0) --pos_;
    reg_bits_ &= ~(1U << pos_);
    --pos_;
    return pos_ + 1;
  }

 private:
  uint32_t reg_bits_;
  uint32_t pos_;
};

void EmitFunProlog(const EmitContext& ctx, std::vector<a64::Ins>* output) {
  RegBitVec gpr_regs(ctx.gpr_reg_mask);
  if (!gpr_regs.empty()) {
    while (!gpr_regs.empty()) {
      uint32_t r1 = gpr_regs.next_reg_no();
      if (gpr_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::str_x_imm_pre, +FIXARG::WZR, -16, r1));
        break;
      }
      uint32_t r2 = gpr_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::stp_x_imm_pre, +FIXARG::WZR, -16, r2, r1));
    }
  }

  RegBitVec flt_regs(ctx.flt_reg_mask);
  if (!flt_regs.empty()) {
    while (!flt_regs.empty()) {
      uint32_t r1 = flt_regs.next_reg_no();
      if (flt_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::fstr_d_imm_pre, +FIXARG::WZR, -16, r1));
        break;
      }
      uint32_t r2 = flt_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::fstp_d_imm_pre, +FIXARG::WZR, -16, r2, r1));
    }
  }
  uint32_t stk_size = ctx.stk_size;
  ASSERT((stk_size >> 24U) == 0, "stack too large");
  if ((stk_size & 0xfff000U) != 0) {
    output->push_back(MakeIns(a64::OPC::sub_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfff000U));
  }

  if ((stk_size & 0xfffU) != 0) {
    output->push_back(MakeIns(a64::OPC::sub_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfffU));
  }
}

void EmitFunEpilog(const EmitContext& ctx, std::vector<a64::Ins>* output) {
  const size_t start = output->size();
  // we will revert everything at the end
  output->push_back(MakeIns(a64::OPC::ret, +FIXARG::LR));

  RegBitVec gpr_regs(ctx.gpr_reg_mask);
  if (!gpr_regs.empty()) {
    while (!gpr_regs.empty()) {
      uint32_t r1 = gpr_regs.next_reg_no();
      if (gpr_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::ldr_x_imm_post, r1, +FIXARG::WZR, 16));
        break;
      }
      uint32_t r2 = gpr_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::ldp_x_imm_post, r2, r1, +FIXARG::WZR, 16));
    }
  }

  RegBitVec flt_regs(ctx.flt_reg_mask);
  if (!flt_regs.empty()) {
    while (!flt_regs.empty()) {
      uint32_t r1 = flt_regs.next_reg_no();
      if (flt_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::fldr_d_imm_post, r1, +FIXARG::WZR, 16));
        break;
      }
      uint32_t r2 = flt_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::fldp_d_imm_post, r2, r1, +FIXARG::WZR, 16));
    }
  }
  uint32_t stk_size = ctx.stk_size;
  ASSERT((stk_size >> 24U) == 0, "stack too large");
  if ((stk_size & 0xfffU) != 0) {
    output->push_back(MakeIns(a64::OPC::add_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfffU));
  }

  if ((stk_size & 0xfff000U) != 0) {
    output->push_back(MakeIns(a64::OPC::add_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfff000U));
  }
  std::reverse(output->begin() + start, output->end());
}

}  // namespace cwerg::code_gen_a64
